[package]
name = "auxin"
version = "0.1.0"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
default = ["std-mutex"]
# Are we able to use rust standard library's Mutex type? (i.e. are we not inside wasm)
std-mutex = []

[dependencies]
auxin_protos = { path = "../auxin_protos" }

libsignal-protocol = { git = "https://github.com/signalapp/libsignal-client", version = "0.1.0" }

rand = "0.7.3"
rand_core = "0.6.2"
rand_chacha = "0.3.0"

base64 = "0.13.0"

uuid = {version="0.8.2", features=["serde", "v4"]}

aes-gcm =  {version="0.9.2", features=["std"]}

simple_logger = "1.11.0"
log = "0.4.14"

serde = {version = "1.0.126", features = ["derive"] }
serde_json = "1.0.64"
num_enum = "0.5.1"

# Default-features disabled to ensure runtime-asyncstd is turned off.
# async-native-tls = { version = "0.3.3", default-features = false, features = ["runtime-tokio"]}

protobuf = "2.23.0"
serde-protobuf = "0.8.2"

custom_error = "1.9.2"
http = "0.2.4"

x509-certificate = "0.2.0"
ring = { version = "0.16", features = ["std"]}
x25519-dalek = { version = "1.1.1", features = ["u64_backend"] }
async-trait = "0.1.50"
futures = "0.3.15"