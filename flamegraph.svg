<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="677.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="677.00"> </text><svg id="frames" x="10" width="1180" total_samples="208"><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="0.0000%" y="597" width="0.4808%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="0.0000%" y="581" width="0.4808%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="0.0000%" y="565" width="0.4808%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="0.0000%" y="549" width="0.4808%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="0.0000%" y="533" width="0.4808%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="0.0000%" y="517" width="0.4808%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="0.0000%" y="501" width="0.4808%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="0.0000%" y="485" width="0.4808%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="0.0000%" y="469" width="0.4808%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="0.0000%" y="453" width="0.4808%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 0.48%)</title><rect x="0.0000%" y="437" width="0.4808%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>openssl::ssl::MidHandshakeSslStream&lt;S&gt;::handshake (1 samples, 0.48%)</title><rect x="0.0000%" y="421" width="0.4808%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>SSL_do_handshake (1 samples, 0.48%)</title><rect x="0.0000%" y="405" width="0.4808%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.48%)</title><rect x="0.0000%" y="389" width="0.4808%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.48%)</title><rect x="0.0000%" y="373" width="0.4808%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.48%)</title><rect x="0.0000%" y="357" width="0.4808%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>BIO_write (1 samples, 0.48%)</title><rect x="0.0000%" y="341" width="0.4808%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="0.0000%" y="325" width="0.4808%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="597" width="0.4808%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="1"/><text x="0.7308%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="581" width="0.4808%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="1"/><text x="0.7308%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="565" width="0.4808%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="1"/><text x="0.7308%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="549" width="0.4808%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="1"/><text x="0.7308%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="533" width="0.4808%" height="15" fill="rgb(221,5,38)" fg:x="1" fg:w="1"/><text x="0.7308%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="517" width="0.4808%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="1"/><text x="0.7308%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="501" width="0.4808%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="1"/><text x="0.7308%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="485" width="0.4808%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="1"/><text x="0.7308%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="469" width="0.4808%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="1"/><text x="0.7308%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="453" width="0.4808%" height="15" fill="rgb(238,160,17)" fg:x="1" fg:w="1"/><text x="0.7308%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="437" width="0.4808%" height="15" fill="rgb(214,148,48)" fg:x="1" fg:w="1"/><text x="0.7308%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="421" width="0.4808%" height="15" fill="rgb(232,36,49)" fg:x="1" fg:w="1"/><text x="0.7308%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="405" width="0.4808%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="1"/><text x="0.7308%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="389" width="0.4808%" height="15" fill="rgb(229,88,8)" fg:x="1" fg:w="1"/><text x="0.7308%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="373" width="0.4808%" height="15" fill="rgb(213,181,19)" fg:x="1" fg:w="1"/><text x="0.7308%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="357" width="0.4808%" height="15" fill="rgb(254,191,54)" fg:x="1" fg:w="1"/><text x="0.7308%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="341" width="0.4808%" height="15" fill="rgb(241,83,37)" fg:x="1" fg:w="1"/><text x="0.7308%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="325" width="0.4808%" height="15" fill="rgb(233,36,39)" fg:x="1" fg:w="1"/><text x="0.7308%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="309" width="0.4808%" height="15" fill="rgb(226,3,54)" fg:x="1" fg:w="1"/><text x="0.7308%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="0.4808%" y="293" width="0.4808%" height="15" fill="rgb(245,192,40)" fg:x="1" fg:w="1"/><text x="0.7308%" y="303.50"></text></g><g><title>native_tls::Certificate::from_pem (1 samples, 0.48%)</title><rect x="0.9615%" y="565" width="0.4808%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="1"/><text x="1.2115%" y="575.50"></text></g><g><title>openssl::x509::X509::from_pem (1 samples, 0.48%)</title><rect x="0.9615%" y="549" width="0.4808%" height="15" fill="rgb(232,182,51)" fg:x="2" fg:w="1"/><text x="1.2115%" y="559.50"></text></g><g><title>openssl_sys::init (1 samples, 0.48%)</title><rect x="0.9615%" y="533" width="0.4808%" height="15" fill="rgb(231,60,39)" fg:x="2" fg:w="1"/><text x="1.2115%" y="543.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.48%)</title><rect x="0.9615%" y="517" width="0.4808%" height="15" fill="rgb(208,69,12)" fg:x="2" fg:w="1"/><text x="1.2115%" y="527.50"></text></g><g><title>OPENSSL_init_ssl (1 samples, 0.48%)</title><rect x="0.9615%" y="501" width="0.4808%" height="15" fill="rgb(235,93,37)" fg:x="2" fg:w="1"/><text x="1.2115%" y="511.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.48%)</title><rect x="0.9615%" y="485" width="0.4808%" height="15" fill="rgb(213,116,39)" fg:x="2" fg:w="1"/><text x="1.2115%" y="495.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.48%)</title><rect x="0.9615%" y="469" width="0.4808%" height="15" fill="rgb(222,207,29)" fg:x="2" fg:w="1"/><text x="1.2115%" y="479.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.48%)</title><rect x="0.9615%" y="453" width="0.4808%" height="15" fill="rgb(206,96,30)" fg:x="2" fg:w="1"/><text x="1.2115%" y="463.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.48%)</title><rect x="0.9615%" y="437" width="0.4808%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="1"/><text x="1.2115%" y="447.50"></text></g><g><title>ASN1_item_d2i (1 samples, 0.48%)</title><rect x="1.4423%" y="437" width="0.4808%" height="15" fill="rgb(250,191,14)" fg:x="3" fg:w="1"/><text x="1.6923%" y="447.50"></text></g><g><title>ASN1_item_ex_d2i (1 samples, 0.48%)</title><rect x="1.4423%" y="421" width="0.4808%" height="15" fill="rgb(239,60,40)" fg:x="3" fg:w="1"/><text x="1.6923%" y="431.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="1.4423%" y="405" width="0.4808%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="1"/><text x="1.6923%" y="415.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="1.4423%" y="389" width="0.4808%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="1"/><text x="1.6923%" y="399.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="1.4423%" y="373" width="0.4808%" height="15" fill="rgb(250,213,24)" fg:x="3" fg:w="1"/><text x="1.6923%" y="383.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="1.4423%" y="357" width="0.4808%" height="15" fill="rgb(247,123,22)" fg:x="3" fg:w="1"/><text x="1.6923%" y="367.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="1.4423%" y="341" width="0.4808%" height="15" fill="rgb(231,138,38)" fg:x="3" fg:w="1"/><text x="1.6923%" y="351.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="1.4423%" y="325" width="0.4808%" height="15" fill="rgb(231,145,46)" fg:x="3" fg:w="1"/><text x="1.6923%" y="335.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="1.4423%" y="309" width="0.4808%" height="15" fill="rgb(251,118,11)" fg:x="3" fg:w="1"/><text x="1.6923%" y="319.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="1.4423%" y="293" width="0.4808%" height="15" fill="rgb(217,147,25)" fg:x="3" fg:w="1"/><text x="1.6923%" y="303.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="1.4423%" y="277" width="0.4808%" height="15" fill="rgb(247,81,37)" fg:x="3" fg:w="1"/><text x="1.6923%" y="287.50"></text></g><g><title>ASN1_STRING_to_UTF8 (1 samples, 0.48%)</title><rect x="1.4423%" y="261" width="0.4808%" height="15" fill="rgb(209,12,38)" fg:x="3" fg:w="1"/><text x="1.6923%" y="271.50"></text></g><g><title>ASN1_mbstring_copy (1 samples, 0.48%)</title><rect x="1.4423%" y="245" width="0.4808%" height="15" fill="rgb(227,1,9)" fg:x="3" fg:w="1"/><text x="1.6923%" y="255.50"></text></g><g><title>ASN1_mbstring_ncopy (1 samples, 0.48%)</title><rect x="1.4423%" y="229" width="0.4808%" height="15" fill="rgb(248,47,43)" fg:x="3" fg:w="1"/><text x="1.6923%" y="239.50"></text></g><g><title>BIO_gets (1 samples, 0.48%)</title><rect x="1.9231%" y="421" width="0.4808%" height="15" fill="rgb(221,10,30)" fg:x="4" fg:w="1"/><text x="2.1731%" y="431.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="1.9231%" y="405" width="0.4808%" height="15" fill="rgb(210,229,1)" fg:x="4" fg:w="1"/><text x="2.1731%" y="415.50"></text></g><g><title>_IO_fgets (1 samples, 0.48%)</title><rect x="1.9231%" y="389" width="0.4808%" height="15" fill="rgb(222,148,37)" fg:x="4" fg:w="1"/><text x="2.1731%" y="399.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.48%)</title><rect x="1.9231%" y="373" width="0.4808%" height="15" fill="rgb(234,67,33)" fg:x="4" fg:w="1"/><text x="2.1731%" y="383.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.48%)</title><rect x="1.9231%" y="357" width="0.4808%" height="15" fill="rgb(247,98,35)" fg:x="4" fg:w="1"/><text x="2.1731%" y="367.50"></text></g><g><title>_IO_new_file_underflow (1 samples, 0.48%)</title><rect x="1.9231%" y="341" width="0.4808%" height="15" fill="rgb(247,138,52)" fg:x="4" fg:w="1"/><text x="2.1731%" y="351.50"></text></g><g><title>__GI___libc_read (1 samples, 0.48%)</title><rect x="1.9231%" y="325" width="0.4808%" height="15" fill="rgb(213,79,30)" fg:x="4" fg:w="1"/><text x="2.1731%" y="335.50"></text></g><g><title>__GI___libc_read (1 samples, 0.48%)</title><rect x="1.9231%" y="309" width="0.4808%" height="15" fill="rgb(246,177,23)" fg:x="4" fg:w="1"/><text x="2.1731%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="293" width="0.4808%" height="15" fill="rgb(230,62,27)" fg:x="4" fg:w="1"/><text x="2.1731%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="277" width="0.4808%" height="15" fill="rgb(216,154,8)" fg:x="4" fg:w="1"/><text x="2.1731%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="261" width="0.4808%" height="15" fill="rgb(244,35,45)" fg:x="4" fg:w="1"/><text x="2.1731%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="245" width="0.4808%" height="15" fill="rgb(251,115,12)" fg:x="4" fg:w="1"/><text x="2.1731%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="229" width="0.4808%" height="15" fill="rgb(240,54,50)" fg:x="4" fg:w="1"/><text x="2.1731%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="213" width="0.4808%" height="15" fill="rgb(233,84,52)" fg:x="4" fg:w="1"/><text x="2.1731%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="197" width="0.4808%" height="15" fill="rgb(207,117,47)" fg:x="4" fg:w="1"/><text x="2.1731%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="181" width="0.4808%" height="15" fill="rgb(249,43,39)" fg:x="4" fg:w="1"/><text x="2.1731%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="165" width="0.4808%" height="15" fill="rgb(209,38,44)" fg:x="4" fg:w="1"/><text x="2.1731%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="149" width="0.4808%" height="15" fill="rgb(236,212,23)" fg:x="4" fg:w="1"/><text x="2.1731%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="133" width="0.4808%" height="15" fill="rgb(242,79,21)" fg:x="4" fg:w="1"/><text x="2.1731%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="117" width="0.4808%" height="15" fill="rgb(211,96,35)" fg:x="4" fg:w="1"/><text x="2.1731%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="101" width="0.4808%" height="15" fill="rgb(253,215,40)" fg:x="4" fg:w="1"/><text x="2.1731%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="85" width="0.4808%" height="15" fill="rgb(211,81,21)" fg:x="4" fg:w="1"/><text x="2.1731%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="69" width="0.4808%" height="15" fill="rgb(208,190,38)" fg:x="4" fg:w="1"/><text x="2.1731%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="53" width="0.4808%" height="15" fill="rgb(235,213,38)" fg:x="4" fg:w="1"/><text x="2.1731%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="1.9231%" y="37" width="0.4808%" height="15" fill="rgb(237,122,38)" fg:x="4" fg:w="1"/><text x="2.1731%" y="47.50"></text></g><g><title>BIO_puts (1 samples, 0.48%)</title><rect x="2.4038%" y="421" width="0.4808%" height="15" fill="rgb(244,218,35)" fg:x="5" fg:w="1"/><text x="2.6538%" y="431.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="2.4038%" y="405" width="0.4808%" height="15" fill="rgb(240,68,47)" fg:x="5" fg:w="1"/><text x="2.6538%" y="415.50"></text></g><g><title>BUF_MEM_grow_clean (1 samples, 0.48%)</title><rect x="2.4038%" y="389" width="0.4808%" height="15" fill="rgb(210,16,53)" fg:x="5" fg:w="1"/><text x="2.6538%" y="399.50"></text></g><g><title>CRYPTO_clear_realloc (1 samples, 0.48%)</title><rect x="2.4038%" y="373" width="0.4808%" height="15" fill="rgb(235,124,12)" fg:x="5" fg:w="1"/><text x="2.6538%" y="383.50"></text></g><g><title>CRYPTO_clear_free (1 samples, 0.48%)</title><rect x="2.4038%" y="357" width="0.4808%" height="15" fill="rgb(224,169,11)" fg:x="5" fg:w="1"/><text x="2.6538%" y="367.50"></text></g><g><title>OPENSSL_cleanse (1 samples, 0.48%)</title><rect x="2.4038%" y="341" width="0.4808%" height="15" fill="rgb(250,166,2)" fg:x="5" fg:w="1"/><text x="2.6538%" y="351.50"></text></g><g><title>EVP_DecodeUpdate (1 samples, 0.48%)</title><rect x="2.8846%" y="421" width="0.4808%" height="15" fill="rgb(242,216,29)" fg:x="6" fg:w="1"/><text x="3.1346%" y="431.50"></text></g><g><title>PEM_X509_INFO_read_bio (5 samples, 2.40%)</title><rect x="1.4423%" y="453" width="2.4038%" height="15" fill="rgb(230,116,27)" fg:x="3" fg:w="5"/><text x="1.6923%" y="463.50">PE..</text></g><g><title>PEM_read_bio_ex (4 samples, 1.92%)</title><rect x="1.9231%" y="437" width="1.9231%" height="15" fill="rgb(228,99,48)" fg:x="4" fg:w="4"/><text x="2.1731%" y="447.50">P..</text></g><g><title>__memchr_avx2 (1 samples, 0.48%)</title><rect x="3.3654%" y="421" width="0.4808%" height="15" fill="rgb(253,11,6)" fg:x="7" fg:w="1"/><text x="3.6154%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 3.37%)</title><rect x="0.9615%" y="581" width="3.3654%" height="15" fill="rgb(247,143,39)" fg:x="2" fg:w="7"/><text x="1.2115%" y="591.50">&lt;co..</text></g><g><title>native_tls::TlsConnectorBuilder::build (6 samples, 2.88%)</title><rect x="1.4423%" y="565" width="2.8846%" height="15" fill="rgb(236,97,10)" fg:x="3" fg:w="6"/><text x="1.6923%" y="575.50">na..</text></g><g><title>native_tls::imp::TlsConnector::new (6 samples, 2.88%)</title><rect x="1.4423%" y="549" width="2.8846%" height="15" fill="rgb(233,208,19)" fg:x="3" fg:w="6"/><text x="1.6923%" y="559.50">na..</text></g><g><title>openssl::ssl::connector::SslConnector::builder (6 samples, 2.88%)</title><rect x="1.4423%" y="533" width="2.8846%" height="15" fill="rgb(216,164,2)" fg:x="3" fg:w="6"/><text x="1.6923%" y="543.50">op..</text></g><g><title>openssl::ssl::SslContextBuilder::set_default_verify_paths (6 samples, 2.88%)</title><rect x="1.4423%" y="517" width="2.8846%" height="15" fill="rgb(220,129,5)" fg:x="3" fg:w="6"/><text x="1.6923%" y="527.50">op..</text></g><g><title>X509_STORE_set_default_paths (6 samples, 2.88%)</title><rect x="1.4423%" y="501" width="2.8846%" height="15" fill="rgb(242,17,10)" fg:x="3" fg:w="6"/><text x="1.6923%" y="511.50">X5..</text></g><g><title>[libcrypto.so.1.1] (6 samples, 2.88%)</title><rect x="1.4423%" y="485" width="2.8846%" height="15" fill="rgb(242,107,0)" fg:x="3" fg:w="6"/><text x="1.6923%" y="495.50">[l..</text></g><g><title>X509_load_cert_crl_file (6 samples, 2.88%)</title><rect x="1.4423%" y="469" width="2.8846%" height="15" fill="rgb(251,28,31)" fg:x="3" fg:w="6"/><text x="1.6923%" y="479.50">X5..</text></g><g><title>X509_STORE_add_cert (1 samples, 0.48%)</title><rect x="3.8462%" y="453" width="0.4808%" height="15" fill="rgb(233,223,10)" fg:x="8" fg:w="1"/><text x="4.0962%" y="463.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="3.8462%" y="437" width="0.4808%" height="15" fill="rgb(215,21,27)" fg:x="8" fg:w="1"/><text x="4.0962%" y="447.50"></text></g><g><title>X509_OBJECT_retrieve_match (1 samples, 0.48%)</title><rect x="3.8462%" y="421" width="0.4808%" height="15" fill="rgb(232,23,21)" fg:x="8" fg:w="1"/><text x="4.0962%" y="431.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="3.8462%" y="405" width="0.4808%" height="15" fill="rgb(244,5,23)" fg:x="8" fg:w="1"/><text x="4.0962%" y="415.50"></text></g><g><title>__GI___qsort_r (1 samples, 0.48%)</title><rect x="3.8462%" y="389" width="0.4808%" height="15" fill="rgb(226,81,46)" fg:x="8" fg:w="1"/><text x="4.0962%" y="399.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="373" width="0.4808%" height="15" fill="rgb(247,70,30)" fg:x="8" fg:w="1"/><text x="4.0962%" y="383.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="357" width="0.4808%" height="15" fill="rgb(212,68,19)" fg:x="8" fg:w="1"/><text x="4.0962%" y="367.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="341" width="0.4808%" height="15" fill="rgb(240,187,13)" fg:x="8" fg:w="1"/><text x="4.0962%" y="351.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="325" width="0.4808%" height="15" fill="rgb(223,113,26)" fg:x="8" fg:w="1"/><text x="4.0962%" y="335.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="309" width="0.4808%" height="15" fill="rgb(206,192,2)" fg:x="8" fg:w="1"/><text x="4.0962%" y="319.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="293" width="0.4808%" height="15" fill="rgb(241,108,4)" fg:x="8" fg:w="1"/><text x="4.0962%" y="303.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="277" width="0.4808%" height="15" fill="rgb(247,173,49)" fg:x="8" fg:w="1"/><text x="4.0962%" y="287.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="261" width="0.4808%" height="15" fill="rgb(224,114,35)" fg:x="8" fg:w="1"/><text x="4.0962%" y="271.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="245" width="0.4808%" height="15" fill="rgb(245,159,27)" fg:x="8" fg:w="1"/><text x="4.0962%" y="255.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="229" width="0.4808%" height="15" fill="rgb(245,172,44)" fg:x="8" fg:w="1"/><text x="4.0962%" y="239.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="213" width="0.4808%" height="15" fill="rgb(236,23,11)" fg:x="8" fg:w="1"/><text x="4.0962%" y="223.50"></text></g><g><title>msort_with_tmp (1 samples, 0.48%)</title><rect x="3.8462%" y="197" width="0.4808%" height="15" fill="rgb(205,117,38)" fg:x="8" fg:w="1"/><text x="4.0962%" y="207.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.48%)</title><rect x="3.8462%" y="181" width="0.4808%" height="15" fill="rgb(237,72,25)" fg:x="8" fg:w="1"/><text x="4.0962%" y="191.50"></text></g><g><title>auxin_cli::state::load_signal_cli_user (2 samples, 0.96%)</title><rect x="4.3269%" y="581" width="0.9615%" height="15" fill="rgb(244,70,9)" fg:x="9" fg:w="2"/><text x="4.5769%" y="591.50"></text></g><g><title>serde_json::de::from_reader (2 samples, 0.96%)</title><rect x="4.3269%" y="565" width="0.9615%" height="15" fill="rgb(217,125,39)" fg:x="9" fg:w="2"/><text x="4.5769%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.96%)</title><rect x="4.3269%" y="549" width="0.9615%" height="15" fill="rgb(235,36,10)" fg:x="9" fg:w="2"/><text x="4.5769%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.96%)</title><rect x="4.3269%" y="533" width="0.9615%" height="15" fill="rgb(251,123,47)" fg:x="9" fg:w="2"/><text x="4.5769%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.96%)</title><rect x="4.3269%" y="517" width="0.9615%" height="15" fill="rgb(221,13,13)" fg:x="9" fg:w="2"/><text x="4.5769%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.96%)</title><rect x="4.3269%" y="501" width="0.9615%" height="15" fill="rgb(238,131,9)" fg:x="9" fg:w="2"/><text x="4.5769%" y="511.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (2 samples, 0.96%)</title><rect x="4.3269%" y="485" width="0.9615%" height="15" fill="rgb(211,50,8)" fg:x="9" fg:w="2"/><text x="4.5769%" y="495.50"></text></g><g><title>serde_json::read::next_or_eof (2 samples, 0.96%)</title><rect x="4.3269%" y="469" width="0.9615%" height="15" fill="rgb(245,182,24)" fg:x="9" fg:w="2"/><text x="4.5769%" y="479.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.96%)</title><rect x="4.3269%" y="453" width="0.9615%" height="15" fill="rgb(242,14,37)" fg:x="9" fg:w="2"/><text x="4.5769%" y="463.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 0.96%)</title><rect x="4.3269%" y="437" width="0.9615%" height="15" fill="rgb(246,228,12)" fg:x="9" fg:w="2"/><text x="4.5769%" y="447.50"></text></g><g><title>std::sys::unix::fs::File::read (2 samples, 0.96%)</title><rect x="4.3269%" y="421" width="0.9615%" height="15" fill="rgb(213,55,15)" fg:x="9" fg:w="2"/><text x="4.5769%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (2 samples, 0.96%)</title><rect x="4.3269%" y="405" width="0.9615%" height="15" fill="rgb(209,9,3)" fg:x="9" fg:w="2"/><text x="4.5769%" y="415.50"></text></g><g><title>__libc_read (2 samples, 0.96%)</title><rect x="4.3269%" y="389" width="0.9615%" height="15" fill="rgb(230,59,30)" fg:x="9" fg:w="2"/><text x="4.5769%" y="399.50"></text></g><g><title>__libc_read (2 samples, 0.96%)</title><rect x="4.3269%" y="373" width="0.9615%" height="15" fill="rgb(209,121,21)" fg:x="9" fg:w="2"/><text x="4.5769%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="357" width="0.9615%" height="15" fill="rgb(220,109,13)" fg:x="9" fg:w="2"/><text x="4.5769%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="341" width="0.9615%" height="15" fill="rgb(232,18,1)" fg:x="9" fg:w="2"/><text x="4.5769%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="325" width="0.9615%" height="15" fill="rgb(215,41,42)" fg:x="9" fg:w="2"/><text x="4.5769%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="309" width="0.9615%" height="15" fill="rgb(224,123,36)" fg:x="9" fg:w="2"/><text x="4.5769%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="293" width="0.9615%" height="15" fill="rgb(240,125,3)" fg:x="9" fg:w="2"/><text x="4.5769%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="277" width="0.9615%" height="15" fill="rgb(205,98,50)" fg:x="9" fg:w="2"/><text x="4.5769%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="261" width="0.9615%" height="15" fill="rgb(205,185,37)" fg:x="9" fg:w="2"/><text x="4.5769%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="245" width="0.9615%" height="15" fill="rgb(238,207,15)" fg:x="9" fg:w="2"/><text x="4.5769%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="229" width="0.9615%" height="15" fill="rgb(213,199,42)" fg:x="9" fg:w="2"/><text x="4.5769%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="213" width="0.9615%" height="15" fill="rgb(235,201,11)" fg:x="9" fg:w="2"/><text x="4.5769%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="197" width="0.9615%" height="15" fill="rgb(207,46,11)" fg:x="9" fg:w="2"/><text x="4.5769%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="181" width="0.9615%" height="15" fill="rgb(241,35,35)" fg:x="9" fg:w="2"/><text x="4.5769%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="165" width="0.9615%" height="15" fill="rgb(243,32,47)" fg:x="9" fg:w="2"/><text x="4.5769%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="149" width="0.9615%" height="15" fill="rgb(247,202,23)" fg:x="9" fg:w="2"/><text x="4.5769%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="133" width="0.9615%" height="15" fill="rgb(219,102,11)" fg:x="9" fg:w="2"/><text x="4.5769%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="4.3269%" y="117" width="0.9615%" height="15" fill="rgb(243,110,44)" fg:x="9" fg:w="2"/><text x="4.5769%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="4.8077%" y="101" width="0.4808%" height="15" fill="rgb(222,74,54)" fg:x="10" fg:w="1"/><text x="5.0577%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="4.8077%" y="85" width="0.4808%" height="15" fill="rgb(216,99,12)" fg:x="10" fg:w="1"/><text x="5.0577%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="4.8077%" y="69" width="0.4808%" height="15" fill="rgb(226,22,26)" fg:x="10" fg:w="1"/><text x="5.0577%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="4.8077%" y="53" width="0.4808%" height="15" fill="rgb(217,163,10)" fg:x="10" fg:w="1"/><text x="5.0577%" y="63.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="5.2885%" y="565" width="0.4808%" height="15" fill="rgb(213,25,53)" fg:x="11" fg:w="1"/><text x="5.5385%" y="575.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="5.2885%" y="549" width="0.4808%" height="15" fill="rgb(252,105,26)" fg:x="11" fg:w="1"/><text x="5.5385%" y="559.50"></text></g><g><title>__readdir64_r (1 samples, 0.48%)</title><rect x="5.2885%" y="533" width="0.4808%" height="15" fill="rgb(220,39,43)" fg:x="11" fg:w="1"/><text x="5.5385%" y="543.50"></text></g><g><title>__GI___getdents64 (1 samples, 0.48%)</title><rect x="5.2885%" y="517" width="0.4808%" height="15" fill="rgb(229,68,48)" fg:x="11" fg:w="1"/><text x="5.5385%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="5.2885%" y="501" width="0.4808%" height="15" fill="rgb(252,8,32)" fg:x="11" fg:w="1"/><text x="5.5385%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="5.2885%" y="485" width="0.4808%" height="15" fill="rgb(223,20,43)" fg:x="11" fg:w="1"/><text x="5.5385%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="5.2885%" y="469" width="0.4808%" height="15" fill="rgb(229,81,49)" fg:x="11" fg:w="1"/><text x="5.5385%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="5.2885%" y="453" width="0.4808%" height="15" fill="rgb(236,28,36)" fg:x="11" fg:w="1"/><text x="5.5385%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="5.2885%" y="437" width="0.4808%" height="15" fill="rgb(249,185,26)" fg:x="11" fg:w="1"/><text x="5.5385%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="5.2885%" y="421" width="0.4808%" height="15" fill="rgb(249,174,33)" fg:x="11" fg:w="1"/><text x="5.5385%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="5.2885%" y="405" width="0.4808%" height="15" fill="rgb(233,201,37)" fg:x="11" fg:w="1"/><text x="5.5385%" y="415.50"></text></g><g><title>auxin_cli::state::make_context::{{closure}} (3 samples, 1.44%)</title><rect x="5.2885%" y="581" width="1.4423%" height="15" fill="rgb(221,78,26)" fg:x="11" fg:w="3"/><text x="5.5385%" y="591.50"></text></g><g><title>std::io::read_to_end (2 samples, 0.96%)</title><rect x="5.7692%" y="565" width="0.9615%" height="15" fill="rgb(250,127,30)" fg:x="12" fg:w="2"/><text x="6.0192%" y="575.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 0.96%)</title><rect x="5.7692%" y="549" width="0.9615%" height="15" fill="rgb(230,49,44)" fg:x="12" fg:w="2"/><text x="6.0192%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::read (2 samples, 0.96%)</title><rect x="5.7692%" y="533" width="0.9615%" height="15" fill="rgb(229,67,23)" fg:x="12" fg:w="2"/><text x="6.0192%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (2 samples, 0.96%)</title><rect x="5.7692%" y="517" width="0.9615%" height="15" fill="rgb(249,83,47)" fg:x="12" fg:w="2"/><text x="6.0192%" y="527.50"></text></g><g><title>__libc_read (2 samples, 0.96%)</title><rect x="5.7692%" y="501" width="0.9615%" height="15" fill="rgb(215,43,3)" fg:x="12" fg:w="2"/><text x="6.0192%" y="511.50"></text></g><g><title>__libc_read (2 samples, 0.96%)</title><rect x="5.7692%" y="485" width="0.9615%" height="15" fill="rgb(238,154,13)" fg:x="12" fg:w="2"/><text x="6.0192%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="469" width="0.9615%" height="15" fill="rgb(219,56,2)" fg:x="12" fg:w="2"/><text x="6.0192%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="453" width="0.9615%" height="15" fill="rgb(233,0,4)" fg:x="12" fg:w="2"/><text x="6.0192%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="437" width="0.9615%" height="15" fill="rgb(235,30,7)" fg:x="12" fg:w="2"/><text x="6.0192%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="421" width="0.9615%" height="15" fill="rgb(250,79,13)" fg:x="12" fg:w="2"/><text x="6.0192%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="405" width="0.9615%" height="15" fill="rgb(211,146,34)" fg:x="12" fg:w="2"/><text x="6.0192%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="389" width="0.9615%" height="15" fill="rgb(228,22,38)" fg:x="12" fg:w="2"/><text x="6.0192%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="373" width="0.9615%" height="15" fill="rgb(235,168,5)" fg:x="12" fg:w="2"/><text x="6.0192%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="357" width="0.9615%" height="15" fill="rgb(221,155,16)" fg:x="12" fg:w="2"/><text x="6.0192%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="341" width="0.9615%" height="15" fill="rgb(215,215,53)" fg:x="12" fg:w="2"/><text x="6.0192%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="325" width="0.9615%" height="15" fill="rgb(223,4,10)" fg:x="12" fg:w="2"/><text x="6.0192%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="309" width="0.9615%" height="15" fill="rgb(234,103,6)" fg:x="12" fg:w="2"/><text x="6.0192%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="293" width="0.9615%" height="15" fill="rgb(227,97,0)" fg:x="12" fg:w="2"/><text x="6.0192%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="277" width="0.9615%" height="15" fill="rgb(234,150,53)" fg:x="12" fg:w="2"/><text x="6.0192%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="261" width="0.9615%" height="15" fill="rgb(228,201,54)" fg:x="12" fg:w="2"/><text x="6.0192%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="245" width="0.9615%" height="15" fill="rgb(222,22,37)" fg:x="12" fg:w="2"/><text x="6.0192%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="229" width="0.9615%" height="15" fill="rgb(237,53,32)" fg:x="12" fg:w="2"/><text x="6.0192%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="213" width="0.9615%" height="15" fill="rgb(233,25,53)" fg:x="12" fg:w="2"/><text x="6.0192%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="197" width="0.9615%" height="15" fill="rgb(210,40,34)" fg:x="12" fg:w="2"/><text x="6.0192%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="181" width="0.9615%" height="15" fill="rgb(241,220,44)" fg:x="12" fg:w="2"/><text x="6.0192%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="5.7692%" y="165" width="0.9615%" height="15" fill="rgb(235,28,35)" fg:x="12" fg:w="2"/><text x="6.0192%" y="175.50"></text></g><g><title>libsignal_protocol::curve::curve25519::KeyPair::new (1 samples, 0.48%)</title><rect x="6.7308%" y="581" width="0.4808%" height="15" fill="rgb(210,56,17)" fg:x="14" fg:w="1"/><text x="6.9808%" y="591.50"></text></g><g><title>&lt;x25519_dalek::x25519::PublicKey as core::convert::From&lt;&amp;x25519_dalek::x25519::StaticSecret&gt;&gt;::from (1 samples, 0.48%)</title><rect x="6.7308%" y="565" width="0.4808%" height="15" fill="rgb(224,130,29)" fg:x="14" fg:w="1"/><text x="6.9808%" y="575.50"></text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.48%)</title><rect x="6.7308%" y="549" width="0.4808%" height="15" fill="rgb(235,212,8)" fg:x="14" fg:w="1"/><text x="6.9808%" y="559.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (1 samples, 0.48%)</title><rect x="6.7308%" y="533" width="0.4808%" height="15" fill="rgb(223,33,50)" fg:x="14" fg:w="1"/><text x="6.9808%" y="543.50"></text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (1 samples, 0.48%)</title><rect x="6.7308%" y="517" width="0.4808%" height="15" fill="rgb(219,149,13)" fg:x="14" fg:w="1"/><text x="6.9808%" y="527.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (1 samples, 0.48%)</title><rect x="6.7308%" y="501" width="0.4808%" height="15" fill="rgb(250,156,29)" fg:x="14" fg:w="1"/><text x="6.9808%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="485" width="0.4808%" height="15" fill="rgb(216,193,19)" fg:x="14" fg:w="1"/><text x="6.9808%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="469" width="0.4808%" height="15" fill="rgb(216,135,14)" fg:x="14" fg:w="1"/><text x="6.9808%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="453" width="0.4808%" height="15" fill="rgb(241,47,5)" fg:x="14" fg:w="1"/><text x="6.9808%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="437" width="0.4808%" height="15" fill="rgb(233,42,35)" fg:x="14" fg:w="1"/><text x="6.9808%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="421" width="0.4808%" height="15" fill="rgb(231,13,6)" fg:x="14" fg:w="1"/><text x="6.9808%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="405" width="0.4808%" height="15" fill="rgb(207,181,40)" fg:x="14" fg:w="1"/><text x="6.9808%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="389" width="0.4808%" height="15" fill="rgb(254,173,49)" fg:x="14" fg:w="1"/><text x="6.9808%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="373" width="0.4808%" height="15" fill="rgb(221,1,38)" fg:x="14" fg:w="1"/><text x="6.9808%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="357" width="0.4808%" height="15" fill="rgb(206,124,46)" fg:x="14" fg:w="1"/><text x="6.9808%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="341" width="0.4808%" height="15" fill="rgb(249,21,11)" fg:x="14" fg:w="1"/><text x="6.9808%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="325" width="0.4808%" height="15" fill="rgb(222,201,40)" fg:x="14" fg:w="1"/><text x="6.9808%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="309" width="0.4808%" height="15" fill="rgb(235,61,29)" fg:x="14" fg:w="1"/><text x="6.9808%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="293" width="0.4808%" height="15" fill="rgb(219,207,3)" fg:x="14" fg:w="1"/><text x="6.9808%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="277" width="0.4808%" height="15" fill="rgb(222,56,46)" fg:x="14" fg:w="1"/><text x="6.9808%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="261" width="0.4808%" height="15" fill="rgb(239,76,54)" fg:x="14" fg:w="1"/><text x="6.9808%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="245" width="0.4808%" height="15" fill="rgb(231,124,27)" fg:x="14" fg:w="1"/><text x="6.9808%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="229" width="0.4808%" height="15" fill="rgb(249,195,6)" fg:x="14" fg:w="1"/><text x="6.9808%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="6.7308%" y="213" width="0.4808%" height="15" fill="rgb(237,174,47)" fg:x="14" fg:w="1"/><text x="6.9808%" y="223.50"></text></g><g><title>libsignal_protocol::sealed_sender::sealed_sender_v1::StaticKeys::calculate (1 samples, 0.48%)</title><rect x="7.2115%" y="581" width="0.4808%" height="15" fill="rgb(206,201,31)" fg:x="15" fg:w="1"/><text x="7.4615%" y="591.50"></text></g><g><title>libsignal_protocol::curve::curve25519::KeyPair::calculate_agreement (1 samples, 0.48%)</title><rect x="7.2115%" y="565" width="0.4808%" height="15" fill="rgb(231,57,52)" fg:x="15" fg:w="1"/><text x="7.4615%" y="575.50"></text></g><g><title>x25519_dalek::x25519::StaticSecret::diffie_hellman (1 samples, 0.48%)</title><rect x="7.2115%" y="549" width="0.4808%" height="15" fill="rgb(248,177,22)" fg:x="15" fg:w="1"/><text x="7.4615%" y="559.50"></text></g><g><title>curve25519_dalek::montgomery::&lt;impl core::ops::arith::Mul&lt;curve25519_dalek::montgomery::MontgomeryPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.48%)</title><rect x="7.2115%" y="533" width="0.4808%" height="15" fill="rgb(215,211,37)" fg:x="15" fg:w="1"/><text x="7.4615%" y="543.50"></text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.48%)</title><rect x="7.2115%" y="517" width="0.4808%" height="15" fill="rgb(241,128,51)" fg:x="15" fg:w="1"/><text x="7.4615%" y="527.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.48%)</title><rect x="7.2115%" y="501" width="0.4808%" height="15" fill="rgb(227,165,31)" fg:x="15" fg:w="1"/><text x="7.4615%" y="511.50"></text></g><g><title>auxin_cli::main::_{{closure}} (15 samples, 7.21%)</title><rect x="0.9615%" y="597" width="7.2115%" height="15" fill="rgb(228,167,24)" fg:x="2" fg:w="15"/><text x="1.2115%" y="607.50">auxin_cli:..</text></g><g><title>serde_json::de::from_str (1 samples, 0.48%)</title><rect x="7.6923%" y="581" width="0.4808%" height="15" fill="rgb(228,143,12)" fg:x="16" fg:w="1"/><text x="7.9423%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.48%)</title><rect x="7.6923%" y="565" width="0.4808%" height="15" fill="rgb(249,149,8)" fg:x="16" fg:w="1"/><text x="7.9423%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.48%)</title><rect x="7.6923%" y="549" width="0.4808%" height="15" fill="rgb(243,35,44)" fg:x="16" fg:w="1"/><text x="7.9423%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 0.48%)</title><rect x="7.6923%" y="533" width="0.4808%" height="15" fill="rgb(246,89,9)" fg:x="16" fg:w="1"/><text x="7.9423%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.48%)</title><rect x="7.6923%" y="517" width="0.4808%" height="15" fill="rgb(233,213,13)" fg:x="16" fg:w="1"/><text x="7.9423%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.48%)</title><rect x="7.6923%" y="501" width="0.4808%" height="15" fill="rgb(233,141,41)" fg:x="16" fg:w="1"/><text x="7.9423%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (6 samples, 2.88%)</title><rect x="8.1731%" y="581" width="2.8846%" height="15" fill="rgb(239,167,4)" fg:x="17" fg:w="6"/><text x="8.4231%" y="591.50">co..</text></g><g><title>&lt;tokio::runtime::blocking::pool::BlockingPool as core::ops::drop::Drop&gt;::drop (6 samples, 2.88%)</title><rect x="8.1731%" y="565" width="2.8846%" height="15" fill="rgb(209,217,16)" fg:x="17" fg:w="6"/><text x="8.4231%" y="575.50">&lt;t..</text></g><g><title>tokio::runtime::blocking::pool::BlockingPool::shutdown (6 samples, 2.88%)</title><rect x="8.1731%" y="549" width="2.8846%" height="15" fill="rgb(219,88,35)" fg:x="17" fg:w="6"/><text x="8.4231%" y="559.50">to..</text></g><g><title>tokio::runtime::blocking::shutdown::Receiver::wait (6 samples, 2.88%)</title><rect x="8.1731%" y="533" width="2.8846%" height="15" fill="rgb(220,193,23)" fg:x="17" fg:w="6"/><text x="8.4231%" y="543.50">to..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (6 samples, 2.88%)</title><rect x="8.1731%" y="517" width="2.8846%" height="15" fill="rgb(230,90,52)" fg:x="17" fg:w="6"/><text x="8.4231%" y="527.50">to..</text></g><g><title>tokio::park::thread::Inner::park (6 samples, 2.88%)</title><rect x="8.1731%" y="501" width="2.8846%" height="15" fill="rgb(252,106,19)" fg:x="17" fg:w="6"/><text x="8.4231%" y="511.50">to..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (6 samples, 2.88%)</title><rect x="8.1731%" y="485" width="2.8846%" height="15" fill="rgb(206,74,20)" fg:x="17" fg:w="6"/><text x="8.4231%" y="495.50">pa..</text></g><g><title>syscall (6 samples, 2.88%)</title><rect x="8.1731%" y="469" width="2.8846%" height="15" fill="rgb(230,138,44)" fg:x="17" fg:w="6"/><text x="8.4231%" y="479.50">sy..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="8.1731%" y="453" width="2.8846%" height="15" fill="rgb(235,182,43)" fg:x="17" fg:w="6"/><text x="8.4231%" y="463.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="8.1731%" y="437" width="2.8846%" height="15" fill="rgb(242,16,51)" fg:x="17" fg:w="6"/><text x="8.4231%" y="447.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="8.1731%" y="421" width="2.8846%" height="15" fill="rgb(248,9,4)" fg:x="17" fg:w="6"/><text x="8.4231%" y="431.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="8.1731%" y="405" width="2.8846%" height="15" fill="rgb(210,31,22)" fg:x="17" fg:w="6"/><text x="8.4231%" y="415.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="8.1731%" y="389" width="2.8846%" height="15" fill="rgb(239,54,39)" fg:x="17" fg:w="6"/><text x="8.4231%" y="399.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="8.1731%" y="373" width="2.8846%" height="15" fill="rgb(230,99,41)" fg:x="17" fg:w="6"/><text x="8.4231%" y="383.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="8.1731%" y="357" width="2.8846%" height="15" fill="rgb(253,106,12)" fg:x="17" fg:w="6"/><text x="8.4231%" y="367.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="8.1731%" y="341" width="2.8846%" height="15" fill="rgb(213,46,41)" fg:x="17" fg:w="6"/><text x="8.4231%" y="351.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="8.1731%" y="325" width="2.8846%" height="15" fill="rgb(215,133,35)" fg:x="17" fg:w="6"/><text x="8.4231%" y="335.50">[u..</text></g><g><title>[unknown] (24 samples, 11.54%)</title><rect x="0.0000%" y="613" width="11.5385%" height="15" fill="rgb(213,28,5)" fg:x="0" fg:w="24"/><text x="0.2500%" y="623.50">[unknown]</text></g><g><title>auxin_cli::main (7 samples, 3.37%)</title><rect x="8.1731%" y="597" width="3.3654%" height="15" fill="rgb(215,77,49)" fg:x="17" fg:w="7"/><text x="8.4231%" y="607.50">aux..</text></g><g><title>tokio::runtime::builder::Builder::build (1 samples, 0.48%)</title><rect x="11.0577%" y="581" width="0.4808%" height="15" fill="rgb(248,100,22)" fg:x="23" fg:w="1"/><text x="11.3077%" y="591.50"></text></g><g><title>num_cpus::linux::get_num_cpus (1 samples, 0.48%)</title><rect x="11.0577%" y="565" width="0.4808%" height="15" fill="rgb(208,67,9)" fg:x="23" fg:w="1"/><text x="11.3077%" y="575.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.48%)</title><rect x="11.0577%" y="549" width="0.4808%" height="15" fill="rgb(219,133,21)" fg:x="23" fg:w="1"/><text x="11.3077%" y="559.50"></text></g><g><title>num_cpus::linux::init_cgroups (1 samples, 0.48%)</title><rect x="11.0577%" y="533" width="0.4808%" height="15" fill="rgb(246,46,29)" fg:x="23" fg:w="1"/><text x="11.3077%" y="543.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="11.0577%" y="517" width="0.4808%" height="15" fill="rgb(246,185,52)" fg:x="23" fg:w="1"/><text x="11.3077%" y="527.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.48%)</title><rect x="11.0577%" y="501" width="0.4808%" height="15" fill="rgb(252,136,11)" fg:x="23" fg:w="1"/><text x="11.3077%" y="511.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.48%)</title><rect x="11.0577%" y="485" width="0.4808%" height="15" fill="rgb(219,138,53)" fg:x="23" fg:w="1"/><text x="11.3077%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.48%)</title><rect x="11.0577%" y="469" width="0.4808%" height="15" fill="rgb(211,51,23)" fg:x="23" fg:w="1"/><text x="11.3077%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.48%)</title><rect x="11.0577%" y="453" width="0.4808%" height="15" fill="rgb(247,221,28)" fg:x="23" fg:w="1"/><text x="11.3077%" y="463.50"></text></g><g><title>__libc_read (1 samples, 0.48%)</title><rect x="11.0577%" y="437" width="0.4808%" height="15" fill="rgb(251,222,45)" fg:x="23" fg:w="1"/><text x="11.3077%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="421" width="0.4808%" height="15" fill="rgb(217,162,53)" fg:x="23" fg:w="1"/><text x="11.3077%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="405" width="0.4808%" height="15" fill="rgb(229,93,14)" fg:x="23" fg:w="1"/><text x="11.3077%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="389" width="0.4808%" height="15" fill="rgb(209,67,49)" fg:x="23" fg:w="1"/><text x="11.3077%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="373" width="0.4808%" height="15" fill="rgb(213,87,29)" fg:x="23" fg:w="1"/><text x="11.3077%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="357" width="0.4808%" height="15" fill="rgb(205,151,52)" fg:x="23" fg:w="1"/><text x="11.3077%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="341" width="0.4808%" height="15" fill="rgb(253,215,39)" fg:x="23" fg:w="1"/><text x="11.3077%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="325" width="0.4808%" height="15" fill="rgb(221,220,41)" fg:x="23" fg:w="1"/><text x="11.3077%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="309" width="0.4808%" height="15" fill="rgb(218,133,21)" fg:x="23" fg:w="1"/><text x="11.3077%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="293" width="0.4808%" height="15" fill="rgb(221,193,43)" fg:x="23" fg:w="1"/><text x="11.3077%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="277" width="0.4808%" height="15" fill="rgb(240,128,52)" fg:x="23" fg:w="1"/><text x="11.3077%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="11.0577%" y="261" width="0.4808%" height="15" fill="rgb(253,114,12)" fg:x="23" fg:w="1"/><text x="11.3077%" y="271.50"></text></g><g><title>[unknown] (46 samples, 22.12%)</title><rect x="11.5385%" y="597" width="22.1154%" height="15" fill="rgb(215,223,47)" fg:x="24" fg:w="46"/><text x="11.7885%" y="607.50">[unknown]</text></g><g><title>[unknown] (46 samples, 22.12%)</title><rect x="11.5385%" y="581" width="22.1154%" height="15" fill="rgb(248,225,23)" fg:x="24" fg:w="46"/><text x="11.7885%" y="591.50">[unknown]</text></g><g><title>[unknown] (46 samples, 22.12%)</title><rect x="11.5385%" y="565" width="22.1154%" height="15" fill="rgb(250,108,0)" fg:x="24" fg:w="46"/><text x="11.7885%" y="575.50">[unknown]</text></g><g><title>[unknown] (46 samples, 22.12%)</title><rect x="11.5385%" y="549" width="22.1154%" height="15" fill="rgb(228,208,7)" fg:x="24" fg:w="46"/><text x="11.7885%" y="559.50">[unknown]</text></g><g><title>[unknown] (39 samples, 18.75%)</title><rect x="14.9038%" y="533" width="18.7500%" height="15" fill="rgb(244,45,10)" fg:x="31" fg:w="39"/><text x="15.1538%" y="543.50">[unknown]</text></g><g><title>[unknown] (39 samples, 18.75%)</title><rect x="14.9038%" y="517" width="18.7500%" height="15" fill="rgb(207,125,25)" fg:x="31" fg:w="39"/><text x="15.1538%" y="527.50">[unknown]</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="20.6731%" y="501" width="12.9808%" height="15" fill="rgb(210,195,18)" fg:x="43" fg:w="27"/><text x="20.9231%" y="511.50">[unknown]</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.48%)</title><rect x="33.6538%" y="565" width="0.4808%" height="15" fill="rgb(249,80,12)" fg:x="70" fg:w="1"/><text x="33.9038%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.48%)</title><rect x="33.6538%" y="549" width="0.4808%" height="15" fill="rgb(221,65,9)" fg:x="70" fg:w="1"/><text x="33.9038%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.48%)</title><rect x="33.6538%" y="533" width="0.4808%" height="15" fill="rgb(235,49,36)" fg:x="70" fg:w="1"/><text x="33.9038%" y="543.50"></text></g><g><title>__GI___prctl (1 samples, 0.48%)</title><rect x="33.6538%" y="517" width="0.4808%" height="15" fill="rgb(225,32,20)" fg:x="70" fg:w="1"/><text x="33.9038%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="33.6538%" y="501" width="0.4808%" height="15" fill="rgb(215,141,46)" fg:x="70" fg:w="1"/><text x="33.9038%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="33.6538%" y="485" width="0.4808%" height="15" fill="rgb(250,160,47)" fg:x="70" fg:w="1"/><text x="33.9038%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="33.6538%" y="469" width="0.4808%" height="15" fill="rgb(216,222,40)" fg:x="70" fg:w="1"/><text x="33.9038%" y="479.50"></text></g><g><title>__GI___mmap64 (7 samples, 3.37%)</title><rect x="34.1346%" y="501" width="3.3654%" height="15" fill="rgb(234,217,39)" fg:x="71" fg:w="7"/><text x="34.3846%" y="511.50">__G..</text></g><g><title>__GI___mmap64 (7 samples, 3.37%)</title><rect x="34.1346%" y="485" width="3.3654%" height="15" fill="rgb(207,178,40)" fg:x="71" fg:w="7"/><text x="34.3846%" y="495.50">__G..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="34.1346%" y="469" width="3.3654%" height="15" fill="rgb(221,136,13)" fg:x="71" fg:w="7"/><text x="34.3846%" y="479.50">[un..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="34.1346%" y="453" width="3.3654%" height="15" fill="rgb(249,199,10)" fg:x="71" fg:w="7"/><text x="34.3846%" y="463.50">[un..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="34.1346%" y="437" width="3.3654%" height="15" fill="rgb(249,222,13)" fg:x="71" fg:w="7"/><text x="34.3846%" y="447.50">[un..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="34.1346%" y="421" width="3.3654%" height="15" fill="rgb(244,185,38)" fg:x="71" fg:w="7"/><text x="34.3846%" y="431.50">[un..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="34.1346%" y="405" width="3.3654%" height="15" fill="rgb(236,202,9)" fg:x="71" fg:w="7"/><text x="34.3846%" y="415.50">[un..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="34.1346%" y="389" width="3.3654%" height="15" fill="rgb(250,229,37)" fg:x="71" fg:w="7"/><text x="34.3846%" y="399.50">[un..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="34.1346%" y="373" width="3.3654%" height="15" fill="rgb(206,174,23)" fg:x="71" fg:w="7"/><text x="34.3846%" y="383.50">[un..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="34.1346%" y="357" width="3.3654%" height="15" fill="rgb(211,33,43)" fg:x="71" fg:w="7"/><text x="34.3846%" y="367.50">[un..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="34.1346%" y="341" width="3.3654%" height="15" fill="rgb(245,58,50)" fg:x="71" fg:w="7"/><text x="34.3846%" y="351.50">[un..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="34.6154%" y="325" width="2.8846%" height="15" fill="rgb(244,68,36)" fg:x="72" fg:w="6"/><text x="34.8654%" y="335.50">[u..</text></g><g><title>__GI___mprotect (8 samples, 3.85%)</title><rect x="37.5000%" y="501" width="3.8462%" height="15" fill="rgb(232,229,15)" fg:x="78" fg:w="8"/><text x="37.7500%" y="511.50">__GI..</text></g><g><title>[unknown] (8 samples, 3.85%)</title><rect x="37.5000%" y="485" width="3.8462%" height="15" fill="rgb(254,30,23)" fg:x="78" fg:w="8"/><text x="37.7500%" y="495.50">[unk..</text></g><g><title>[unknown] (8 samples, 3.85%)</title><rect x="37.5000%" y="469" width="3.8462%" height="15" fill="rgb(235,160,14)" fg:x="78" fg:w="8"/><text x="37.7500%" y="479.50">[unk..</text></g><g><title>[unknown] (8 samples, 3.85%)</title><rect x="37.5000%" y="453" width="3.8462%" height="15" fill="rgb(212,155,44)" fg:x="78" fg:w="8"/><text x="37.7500%" y="463.50">[unk..</text></g><g><title>[unknown] (8 samples, 3.85%)</title><rect x="37.5000%" y="437" width="3.8462%" height="15" fill="rgb(226,2,50)" fg:x="78" fg:w="8"/><text x="37.7500%" y="447.50">[unk..</text></g><g><title>[unknown] (8 samples, 3.85%)</title><rect x="37.5000%" y="421" width="3.8462%" height="15" fill="rgb(234,177,6)" fg:x="78" fg:w="8"/><text x="37.7500%" y="431.50">[unk..</text></g><g><title>[unknown] (8 samples, 3.85%)</title><rect x="37.5000%" y="405" width="3.8462%" height="15" fill="rgb(217,24,9)" fg:x="78" fg:w="8"/><text x="37.7500%" y="415.50">[unk..</text></g><g><title>[unknown] (8 samples, 3.85%)</title><rect x="37.5000%" y="389" width="3.8462%" height="15" fill="rgb(220,13,46)" fg:x="78" fg:w="8"/><text x="37.7500%" y="399.50">[unk..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="37.9808%" y="373" width="3.3654%" height="15" fill="rgb(239,221,27)" fg:x="79" fg:w="7"/><text x="38.2308%" y="383.50">[un..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="38.4615%" y="357" width="2.8846%" height="15" fill="rgb(222,198,25)" fg:x="80" fg:w="6"/><text x="38.7115%" y="367.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="38.4615%" y="341" width="2.8846%" height="15" fill="rgb(211,99,13)" fg:x="80" fg:w="6"/><text x="38.7115%" y="351.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="38.4615%" y="325" width="2.8846%" height="15" fill="rgb(232,111,31)" fg:x="80" fg:w="6"/><text x="38.7115%" y="335.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="38.4615%" y="309" width="2.8846%" height="15" fill="rgb(245,82,37)" fg:x="80" fg:w="6"/><text x="38.7115%" y="319.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="38.4615%" y="293" width="2.8846%" height="15" fill="rgb(227,149,46)" fg:x="80" fg:w="6"/><text x="38.7115%" y="303.50">[u..</text></g><g><title>__GI___clone (63 samples, 30.29%)</title><rect x="11.5385%" y="613" width="30.2885%" height="15" fill="rgb(218,36,50)" fg:x="24" fg:w="63"/><text x="11.7885%" y="623.50">__GI___clone</text></g><g><title>start_thread (17 samples, 8.17%)</title><rect x="33.6538%" y="597" width="8.1731%" height="15" fill="rgb(226,80,48)" fg:x="70" fg:w="17"/><text x="33.9038%" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 8.17%)</title><rect x="33.6538%" y="581" width="8.1731%" height="15" fill="rgb(238,224,15)" fg:x="70" fg:w="17"/><text x="33.9038%" y="591.50">std::sys::u..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (16 samples, 7.69%)</title><rect x="34.1346%" y="565" width="7.6923%" height="15" fill="rgb(241,136,10)" fg:x="71" fg:w="16"/><text x="34.3846%" y="575.50">std::sys::u..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (16 samples, 7.69%)</title><rect x="34.1346%" y="549" width="7.6923%" height="15" fill="rgb(208,32,45)" fg:x="71" fg:w="16"/><text x="34.3846%" y="559.50">std::sys::u..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (16 samples, 7.69%)</title><rect x="34.1346%" y="533" width="7.6923%" height="15" fill="rgb(207,135,9)" fg:x="71" fg:w="16"/><text x="34.3846%" y="543.50">std::sys::u..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (16 samples, 7.69%)</title><rect x="34.1346%" y="517" width="7.6923%" height="15" fill="rgb(206,86,44)" fg:x="71" fg:w="16"/><text x="34.3846%" y="527.50">std::sys::u..</text></g><g><title>std::sys::unix::os::page_size (1 samples, 0.48%)</title><rect x="41.3462%" y="501" width="0.4808%" height="15" fill="rgb(245,177,15)" fg:x="86" fg:w="1"/><text x="41.5962%" y="511.50"></text></g><g><title>__GI___sysconf (1 samples, 0.48%)</title><rect x="41.3462%" y="485" width="0.4808%" height="15" fill="rgb(206,64,50)" fg:x="86" fg:w="1"/><text x="41.5962%" y="495.50"></text></g><g><title>__libc_start_main (1 samples, 0.48%)</title><rect x="41.8269%" y="597" width="0.4808%" height="15" fill="rgb(234,36,40)" fg:x="87" fg:w="1"/><text x="42.0769%" y="607.50"></text></g><g><title>main (1 samples, 0.48%)</title><rect x="41.8269%" y="581" width="0.4808%" height="15" fill="rgb(213,64,8)" fg:x="87" fg:w="1"/><text x="42.0769%" y="591.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.48%)</title><rect x="41.8269%" y="565" width="0.4808%" height="15" fill="rgb(210,75,36)" fg:x="87" fg:w="1"/><text x="42.0769%" y="575.50"></text></g><g><title>std::sys_common::rt::cleanup (1 samples, 0.48%)</title><rect x="41.8269%" y="549" width="0.4808%" height="15" fill="rgb(229,88,21)" fg:x="87" fg:w="1"/><text x="42.0769%" y="559.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.48%)</title><rect x="41.8269%" y="533" width="0.4808%" height="15" fill="rgb(252,204,47)" fg:x="87" fg:w="1"/><text x="42.0769%" y="543.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.48%)</title><rect x="41.8269%" y="517" width="0.4808%" height="15" fill="rgb(208,77,27)" fg:x="87" fg:w="1"/><text x="42.0769%" y="527.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.48%)</title><rect x="41.8269%" y="501" width="0.4808%" height="15" fill="rgb(221,76,26)" fg:x="87" fg:w="1"/><text x="42.0769%" y="511.50"></text></g><g><title>std::sys_common::rt::cleanup::{{closure}} (1 samples, 0.48%)</title><rect x="41.8269%" y="485" width="0.4808%" height="15" fill="rgb(225,139,18)" fg:x="87" fg:w="1"/><text x="42.0769%" y="495.50"></text></g><g><title>std::io::cleanup (1 samples, 0.48%)</title><rect x="41.8269%" y="469" width="0.4808%" height="15" fill="rgb(230,137,11)" fg:x="87" fg:w="1"/><text x="42.0769%" y="479.50"></text></g><g><title>std::io::stdio::cleanup (1 samples, 0.48%)</title><rect x="41.8269%" y="453" width="0.4808%" height="15" fill="rgb(212,28,1)" fg:x="87" fg:w="1"/><text x="42.0769%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt; (1 samples, 0.48%)</title><rect x="41.8269%" y="437" width="0.4808%" height="15" fill="rgb(248,164,17)" fg:x="87" fg:w="1"/><text x="42.0769%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="421" width="0.4808%" height="15" fill="rgb(222,171,42)" fg:x="87" fg:w="1"/><text x="42.0769%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="405" width="0.4808%" height="15" fill="rgb(243,84,45)" fg:x="87" fg:w="1"/><text x="42.0769%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="389" width="0.4808%" height="15" fill="rgb(252,49,23)" fg:x="87" fg:w="1"/><text x="42.0769%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="373" width="0.4808%" height="15" fill="rgb(215,19,7)" fg:x="87" fg:w="1"/><text x="42.0769%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="357" width="0.4808%" height="15" fill="rgb(238,81,41)" fg:x="87" fg:w="1"/><text x="42.0769%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="341" width="0.4808%" height="15" fill="rgb(210,199,37)" fg:x="87" fg:w="1"/><text x="42.0769%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="325" width="0.4808%" height="15" fill="rgb(244,192,49)" fg:x="87" fg:w="1"/><text x="42.0769%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="309" width="0.4808%" height="15" fill="rgb(226,211,11)" fg:x="87" fg:w="1"/><text x="42.0769%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="293" width="0.4808%" height="15" fill="rgb(236,162,54)" fg:x="87" fg:w="1"/><text x="42.0769%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="277" width="0.4808%" height="15" fill="rgb(220,229,9)" fg:x="87" fg:w="1"/><text x="42.0769%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="261" width="0.4808%" height="15" fill="rgb(250,87,22)" fg:x="87" fg:w="1"/><text x="42.0769%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="245" width="0.4808%" height="15" fill="rgb(239,43,17)" fg:x="87" fg:w="1"/><text x="42.0769%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="229" width="0.4808%" height="15" fill="rgb(231,177,25)" fg:x="87" fg:w="1"/><text x="42.0769%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="213" width="0.4808%" height="15" fill="rgb(219,179,1)" fg:x="87" fg:w="1"/><text x="42.0769%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="197" width="0.4808%" height="15" fill="rgb(238,219,53)" fg:x="87" fg:w="1"/><text x="42.0769%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="181" width="0.4808%" height="15" fill="rgb(232,167,36)" fg:x="87" fg:w="1"/><text x="42.0769%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="165" width="0.4808%" height="15" fill="rgb(244,19,51)" fg:x="87" fg:w="1"/><text x="42.0769%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="149" width="0.4808%" height="15" fill="rgb(224,6,22)" fg:x="87" fg:w="1"/><text x="42.0769%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="133" width="0.4808%" height="15" fill="rgb(224,145,5)" fg:x="87" fg:w="1"/><text x="42.0769%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="41.8269%" y="117" width="0.4808%" height="15" fill="rgb(234,130,49)" fg:x="87" fg:w="1"/><text x="42.0769%" y="127.50"></text></g><g><title>auxin-cli (89 samples, 42.79%)</title><rect x="0.0000%" y="629" width="42.7885%" height="15" fill="rgb(254,6,2)" fg:x="0" fg:w="89"/><text x="0.2500%" y="639.50">auxin-cli</text></g><g><title>_start (2 samples, 0.96%)</title><rect x="41.8269%" y="613" width="0.9615%" height="15" fill="rgb(208,96,46)" fg:x="87" fg:w="2"/><text x="42.0769%" y="623.50"></text></g><g><title>_dl_start (1 samples, 0.48%)</title><rect x="42.3077%" y="597" width="0.4808%" height="15" fill="rgb(239,3,39)" fg:x="88" fg:w="1"/><text x="42.5577%" y="607.50"></text></g><g><title>_dl_start_final (1 samples, 0.48%)</title><rect x="42.3077%" y="581" width="0.4808%" height="15" fill="rgb(233,210,1)" fg:x="88" fg:w="1"/><text x="42.5577%" y="591.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.48%)</title><rect x="42.3077%" y="565" width="0.4808%" height="15" fill="rgb(244,137,37)" fg:x="88" fg:w="1"/><text x="42.5577%" y="575.50"></text></g><g><title>dl_main (1 samples, 0.48%)</title><rect x="42.3077%" y="549" width="0.4808%" height="15" fill="rgb(240,136,2)" fg:x="88" fg:w="1"/><text x="42.5577%" y="559.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.48%)</title><rect x="42.3077%" y="533" width="0.4808%" height="15" fill="rgb(239,18,37)" fg:x="88" fg:w="1"/><text x="42.5577%" y="543.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.48%)</title><rect x="42.3077%" y="517" width="0.4808%" height="15" fill="rgb(218,185,22)" fg:x="88" fg:w="1"/><text x="42.5577%" y="527.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.48%)</title><rect x="42.3077%" y="501" width="0.4808%" height="15" fill="rgb(225,218,4)" fg:x="88" fg:w="1"/><text x="42.5577%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="485" width="0.4808%" height="15" fill="rgb(230,182,32)" fg:x="88" fg:w="1"/><text x="42.5577%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="469" width="0.4808%" height="15" fill="rgb(242,56,43)" fg:x="88" fg:w="1"/><text x="42.5577%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="453" width="0.4808%" height="15" fill="rgb(233,99,24)" fg:x="88" fg:w="1"/><text x="42.5577%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="437" width="0.4808%" height="15" fill="rgb(234,209,42)" fg:x="88" fg:w="1"/><text x="42.5577%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="421" width="0.4808%" height="15" fill="rgb(227,7,12)" fg:x="88" fg:w="1"/><text x="42.5577%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="405" width="0.4808%" height="15" fill="rgb(245,203,43)" fg:x="88" fg:w="1"/><text x="42.5577%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="389" width="0.4808%" height="15" fill="rgb(238,205,33)" fg:x="88" fg:w="1"/><text x="42.5577%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="373" width="0.4808%" height="15" fill="rgb(231,56,7)" fg:x="88" fg:w="1"/><text x="42.5577%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="357" width="0.4808%" height="15" fill="rgb(244,186,29)" fg:x="88" fg:w="1"/><text x="42.5577%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="341" width="0.4808%" height="15" fill="rgb(234,111,31)" fg:x="88" fg:w="1"/><text x="42.5577%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="42.3077%" y="325" width="0.4808%" height="15" fill="rgb(241,149,10)" fg:x="88" fg:w="1"/><text x="42.5577%" y="335.50"></text></g><g><title>perf (6 samples, 2.88%)</title><rect x="42.7885%" y="629" width="2.8846%" height="15" fill="rgb(249,206,44)" fg:x="89" fg:w="6"/><text x="43.0385%" y="639.50">pe..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="42.7885%" y="613" width="2.8846%" height="15" fill="rgb(251,153,30)" fg:x="89" fg:w="6"/><text x="43.0385%" y="623.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="42.7885%" y="597" width="2.8846%" height="15" fill="rgb(239,152,38)" fg:x="89" fg:w="6"/><text x="43.0385%" y="607.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="42.7885%" y="581" width="2.8846%" height="15" fill="rgb(249,139,47)" fg:x="89" fg:w="6"/><text x="43.0385%" y="591.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="42.7885%" y="565" width="2.8846%" height="15" fill="rgb(244,64,35)" fg:x="89" fg:w="6"/><text x="43.0385%" y="575.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="42.7885%" y="549" width="2.8846%" height="15" fill="rgb(216,46,15)" fg:x="89" fg:w="6"/><text x="43.0385%" y="559.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="42.7885%" y="533" width="2.8846%" height="15" fill="rgb(250,74,19)" fg:x="89" fg:w="6"/><text x="43.0385%" y="543.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="42.7885%" y="517" width="2.8846%" height="15" fill="rgb(249,42,33)" fg:x="89" fg:w="6"/><text x="43.0385%" y="527.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="42.7885%" y="501" width="2.8846%" height="15" fill="rgb(242,149,17)" fg:x="89" fg:w="6"/><text x="43.0385%" y="511.50">[u..</text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="45.6731%" y="597" width="0.9615%" height="15" fill="rgb(244,29,21)" fg:x="95" fg:w="2"/><text x="45.9231%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="45.6731%" y="581" width="0.9615%" height="15" fill="rgb(220,130,37)" fg:x="95" fg:w="2"/><text x="45.9231%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="45.6731%" y="565" width="0.9615%" height="15" fill="rgb(211,67,2)" fg:x="95" fg:w="2"/><text x="45.9231%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="45.6731%" y="549" width="0.9615%" height="15" fill="rgb(235,68,52)" fg:x="95" fg:w="2"/><text x="45.9231%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="45.6731%" y="533" width="0.9615%" height="15" fill="rgb(246,142,3)" fg:x="95" fg:w="2"/><text x="45.9231%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="45.6731%" y="517" width="0.9615%" height="15" fill="rgb(241,25,7)" fg:x="95" fg:w="2"/><text x="45.9231%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="45.6731%" y="501" width="0.9615%" height="15" fill="rgb(242,119,39)" fg:x="95" fg:w="2"/><text x="45.9231%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="45.6731%" y="485" width="0.9615%" height="15" fill="rgb(241,98,45)" fg:x="95" fg:w="2"/><text x="45.9231%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.1538%" y="469" width="0.4808%" height="15" fill="rgb(254,28,30)" fg:x="96" fg:w="1"/><text x="46.4038%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.1538%" y="453" width="0.4808%" height="15" fill="rgb(241,142,54)" fg:x="96" fg:w="1"/><text x="46.4038%" y="463.50"></text></g><g><title>[unknown] (3 samples, 1.44%)</title><rect x="45.6731%" y="613" width="1.4423%" height="15" fill="rgb(222,85,15)" fg:x="95" fg:w="3"/><text x="45.9231%" y="623.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1 samples, 0.48%)</title><rect x="46.6346%" y="597" width="0.4808%" height="15" fill="rgb(210,85,47)" fg:x="97" fg:w="1"/><text x="46.8846%" y="607.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1 samples, 0.48%)</title><rect x="46.6346%" y="581" width="0.4808%" height="15" fill="rgb(224,206,25)" fg:x="97" fg:w="1"/><text x="46.8846%" y="591.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (1 samples, 0.48%)</title><rect x="46.6346%" y="565" width="0.4808%" height="15" fill="rgb(243,201,19)" fg:x="97" fg:w="1"/><text x="46.8846%" y="575.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (1 samples, 0.48%)</title><rect x="46.6346%" y="549" width="0.4808%" height="15" fill="rgb(236,59,4)" fg:x="97" fg:w="1"/><text x="46.8846%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="533" width="0.4808%" height="15" fill="rgb(254,179,45)" fg:x="97" fg:w="1"/><text x="46.8846%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="517" width="0.4808%" height="15" fill="rgb(226,14,10)" fg:x="97" fg:w="1"/><text x="46.8846%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="501" width="0.4808%" height="15" fill="rgb(244,27,41)" fg:x="97" fg:w="1"/><text x="46.8846%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="485" width="0.4808%" height="15" fill="rgb(235,35,32)" fg:x="97" fg:w="1"/><text x="46.8846%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="469" width="0.4808%" height="15" fill="rgb(218,68,31)" fg:x="97" fg:w="1"/><text x="46.8846%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="453" width="0.4808%" height="15" fill="rgb(207,120,37)" fg:x="97" fg:w="1"/><text x="46.8846%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="437" width="0.4808%" height="15" fill="rgb(227,98,0)" fg:x="97" fg:w="1"/><text x="46.8846%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="421" width="0.4808%" height="15" fill="rgb(207,7,3)" fg:x="97" fg:w="1"/><text x="46.8846%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="405" width="0.4808%" height="15" fill="rgb(206,98,19)" fg:x="97" fg:w="1"/><text x="46.8846%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="389" width="0.4808%" height="15" fill="rgb(217,5,26)" fg:x="97" fg:w="1"/><text x="46.8846%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="373" width="0.4808%" height="15" fill="rgb(235,190,38)" fg:x="97" fg:w="1"/><text x="46.8846%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="357" width="0.4808%" height="15" fill="rgb(247,86,24)" fg:x="97" fg:w="1"/><text x="46.8846%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="341" width="0.4808%" height="15" fill="rgb(205,101,16)" fg:x="97" fg:w="1"/><text x="46.8846%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="325" width="0.4808%" height="15" fill="rgb(246,168,33)" fg:x="97" fg:w="1"/><text x="46.8846%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="309" width="0.4808%" height="15" fill="rgb(231,114,1)" fg:x="97" fg:w="1"/><text x="46.8846%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="293" width="0.4808%" height="15" fill="rgb(207,184,53)" fg:x="97" fg:w="1"/><text x="46.8846%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="46.6346%" y="277" width="0.4808%" height="15" fill="rgb(224,95,51)" fg:x="97" fg:w="1"/><text x="46.8846%" y="287.50"></text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="581" width="2.8846%" height="15" fill="rgb(212,188,45)" fg:x="98" fg:w="6"/><text x="47.3654%" y="591.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="565" width="2.8846%" height="15" fill="rgb(223,154,38)" fg:x="98" fg:w="6"/><text x="47.3654%" y="575.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="549" width="2.8846%" height="15" fill="rgb(251,22,52)" fg:x="98" fg:w="6"/><text x="47.3654%" y="559.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="533" width="2.8846%" height="15" fill="rgb(229,209,22)" fg:x="98" fg:w="6"/><text x="47.3654%" y="543.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="517" width="2.8846%" height="15" fill="rgb(234,138,34)" fg:x="98" fg:w="6"/><text x="47.3654%" y="527.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="501" width="2.8846%" height="15" fill="rgb(212,95,11)" fg:x="98" fg:w="6"/><text x="47.3654%" y="511.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="485" width="2.8846%" height="15" fill="rgb(240,179,47)" fg:x="98" fg:w="6"/><text x="47.3654%" y="495.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="469" width="2.8846%" height="15" fill="rgb(240,163,11)" fg:x="98" fg:w="6"/><text x="47.3654%" y="479.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="453" width="2.8846%" height="15" fill="rgb(236,37,12)" fg:x="98" fg:w="6"/><text x="47.3654%" y="463.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="437" width="2.8846%" height="15" fill="rgb(232,164,16)" fg:x="98" fg:w="6"/><text x="47.3654%" y="447.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="421" width="2.8846%" height="15" fill="rgb(244,205,15)" fg:x="98" fg:w="6"/><text x="47.3654%" y="431.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="405" width="2.8846%" height="15" fill="rgb(223,117,47)" fg:x="98" fg:w="6"/><text x="47.3654%" y="415.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="47.1154%" y="389" width="2.8846%" height="15" fill="rgb(244,107,35)" fg:x="98" fg:w="6"/><text x="47.3654%" y="399.50">[u..</text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.96%)</title><rect x="50.0000%" y="517" width="0.9615%" height="15" fill="rgb(205,140,8)" fg:x="104" fg:w="2"/><text x="50.2500%" y="527.50"></text></g><g><title>pthread_getattr_np (2 samples, 0.96%)</title><rect x="50.0000%" y="501" width="0.9615%" height="15" fill="rgb(228,84,46)" fg:x="104" fg:w="2"/><text x="50.2500%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.96%)</title><rect x="50.0000%" y="485" width="0.9615%" height="15" fill="rgb(254,188,9)" fg:x="104" fg:w="2"/><text x="50.2500%" y="495.50"></text></g><g><title>tcache_init (2 samples, 0.96%)</title><rect x="50.0000%" y="469" width="0.9615%" height="15" fill="rgb(206,112,54)" fg:x="104" fg:w="2"/><text x="50.2500%" y="479.50"></text></g><g><title>tcache_init (2 samples, 0.96%)</title><rect x="50.0000%" y="453" width="0.9615%" height="15" fill="rgb(216,84,49)" fg:x="104" fg:w="2"/><text x="50.2500%" y="463.50"></text></g><g><title>arena_get2 (2 samples, 0.96%)</title><rect x="50.0000%" y="437" width="0.9615%" height="15" fill="rgb(214,194,35)" fg:x="104" fg:w="2"/><text x="50.2500%" y="447.50"></text></g><g><title>arena_get2 (2 samples, 0.96%)</title><rect x="50.0000%" y="421" width="0.9615%" height="15" fill="rgb(249,28,3)" fg:x="104" fg:w="2"/><text x="50.2500%" y="431.50"></text></g><g><title>_int_new_arena (2 samples, 0.96%)</title><rect x="50.0000%" y="405" width="0.9615%" height="15" fill="rgb(222,56,52)" fg:x="104" fg:w="2"/><text x="50.2500%" y="415.50"></text></g><g><title>new_heap (2 samples, 0.96%)</title><rect x="50.0000%" y="389" width="0.9615%" height="15" fill="rgb(245,217,50)" fg:x="104" fg:w="2"/><text x="50.2500%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="50.0000%" y="373" width="0.9615%" height="15" fill="rgb(213,201,24)" fg:x="104" fg:w="2"/><text x="50.2500%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="50.0000%" y="357" width="0.9615%" height="15" fill="rgb(248,116,28)" fg:x="104" fg:w="2"/><text x="50.2500%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="50.0000%" y="341" width="0.9615%" height="15" fill="rgb(219,72,43)" fg:x="104" fg:w="2"/><text x="50.2500%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="50.0000%" y="325" width="0.9615%" height="15" fill="rgb(209,138,14)" fg:x="104" fg:w="2"/><text x="50.2500%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="50.0000%" y="309" width="0.9615%" height="15" fill="rgb(222,18,33)" fg:x="104" fg:w="2"/><text x="50.2500%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="50.0000%" y="293" width="0.9615%" height="15" fill="rgb(213,199,7)" fg:x="104" fg:w="2"/><text x="50.2500%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.96%)</title><rect x="50.0000%" y="277" width="0.9615%" height="15" fill="rgb(250,110,10)" fg:x="104" fg:w="2"/><text x="50.2500%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="50.4808%" y="261" width="0.4808%" height="15" fill="rgb(248,123,6)" fg:x="105" fg:w="1"/><text x="50.7308%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="50.4808%" y="245" width="0.4808%" height="15" fill="rgb(206,91,31)" fg:x="105" fg:w="1"/><text x="50.7308%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="50.4808%" y="229" width="0.4808%" height="15" fill="rgb(211,154,13)" fg:x="105" fg:w="1"/><text x="50.7308%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="50.4808%" y="213" width="0.4808%" height="15" fill="rgb(225,148,7)" fg:x="105" fg:w="1"/><text x="50.7308%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="50.4808%" y="197" width="0.4808%" height="15" fill="rgb(220,160,43)" fg:x="105" fg:w="1"/><text x="50.7308%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="50.4808%" y="181" width="0.4808%" height="15" fill="rgb(213,52,39)" fg:x="105" fg:w="1"/><text x="50.7308%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="50.4808%" y="165" width="0.4808%" height="15" fill="rgb(243,137,7)" fg:x="105" fg:w="1"/><text x="50.7308%" y="175.50"></text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="469" width="2.8846%" height="15" fill="rgb(230,79,13)" fg:x="106" fg:w="6"/><text x="51.2115%" y="479.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="453" width="2.8846%" height="15" fill="rgb(247,105,23)" fg:x="106" fg:w="6"/><text x="51.2115%" y="463.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="437" width="2.8846%" height="15" fill="rgb(223,179,41)" fg:x="106" fg:w="6"/><text x="51.2115%" y="447.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="421" width="2.8846%" height="15" fill="rgb(218,9,34)" fg:x="106" fg:w="6"/><text x="51.2115%" y="431.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="405" width="2.8846%" height="15" fill="rgb(222,106,8)" fg:x="106" fg:w="6"/><text x="51.2115%" y="415.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="389" width="2.8846%" height="15" fill="rgb(211,220,0)" fg:x="106" fg:w="6"/><text x="51.2115%" y="399.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="373" width="2.8846%" height="15" fill="rgb(229,52,16)" fg:x="106" fg:w="6"/><text x="51.2115%" y="383.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="357" width="2.8846%" height="15" fill="rgb(212,155,18)" fg:x="106" fg:w="6"/><text x="51.2115%" y="367.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="341" width="2.8846%" height="15" fill="rgb(242,21,14)" fg:x="106" fg:w="6"/><text x="51.2115%" y="351.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="325" width="2.8846%" height="15" fill="rgb(222,19,48)" fg:x="106" fg:w="6"/><text x="51.2115%" y="335.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="309" width="2.8846%" height="15" fill="rgb(232,45,27)" fg:x="106" fg:w="6"/><text x="51.2115%" y="319.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="293" width="2.8846%" height="15" fill="rgb(249,103,42)" fg:x="106" fg:w="6"/><text x="51.2115%" y="303.50">[u..</text></g><g><title>[unknown] (6 samples, 2.88%)</title><rect x="50.9615%" y="277" width="2.8846%" height="15" fill="rgb(246,81,33)" fg:x="106" fg:w="6"/><text x="51.2115%" y="287.50">[u..</text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (7 samples, 3.37%)</title><rect x="50.9615%" y="485" width="3.3654%" height="15" fill="rgb(252,33,42)" fg:x="106" fg:w="7"/><text x="51.2115%" y="495.50">std..</text></g><g><title>parking_lot_core::parking_lot::ThreadData::new (1 samples, 0.48%)</title><rect x="53.8462%" y="469" width="0.4808%" height="15" fill="rgb(209,212,41)" fg:x="112" fg:w="1"/><text x="54.0962%" y="479.50"></text></g><g><title>syscall (1 samples, 0.48%)</title><rect x="53.8462%" y="453" width="0.4808%" height="15" fill="rgb(207,154,6)" fg:x="112" fg:w="1"/><text x="54.0962%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="53.8462%" y="437" width="0.4808%" height="15" fill="rgb(223,64,47)" fg:x="112" fg:w="1"/><text x="54.0962%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="53.8462%" y="421" width="0.4808%" height="15" fill="rgb(211,161,38)" fg:x="112" fg:w="1"/><text x="54.0962%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="53.8462%" y="405" width="0.4808%" height="15" fill="rgb(219,138,40)" fg:x="112" fg:w="1"/><text x="54.0962%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="53.8462%" y="389" width="0.4808%" height="15" fill="rgb(241,228,46)" fg:x="112" fg:w="1"/><text x="54.0962%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="53.8462%" y="373" width="0.4808%" height="15" fill="rgb(223,209,38)" fg:x="112" fg:w="1"/><text x="54.0962%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="53.8462%" y="357" width="0.4808%" height="15" fill="rgb(236,164,45)" fg:x="112" fg:w="1"/><text x="54.0962%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="53.8462%" y="341" width="0.4808%" height="15" fill="rgb(231,15,5)" fg:x="112" fg:w="1"/><text x="54.0962%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="53.8462%" y="325" width="0.4808%" height="15" fill="rgb(252,35,15)" fg:x="112" fg:w="1"/><text x="54.0962%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="53.8462%" y="309" width="0.4808%" height="15" fill="rgb(248,181,18)" fg:x="112" fg:w="1"/><text x="54.0962%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="53.8462%" y="293" width="0.4808%" height="15" fill="rgb(233,39,42)" fg:x="112" fg:w="1"/><text x="54.0962%" y="303.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (46 samples, 22.12%)</title><rect x="50.9615%" y="501" width="22.1154%" height="15" fill="rgb(238,110,33)" fg:x="106" fg:w="46"/><text x="51.2115%" y="511.50">parking_lot::raw_mutex::RawMutex::l..</text></g><g><title>syscall (39 samples, 18.75%)</title><rect x="54.3269%" y="485" width="18.7500%" height="15" fill="rgb(233,195,10)" fg:x="113" fg:w="39"/><text x="54.5769%" y="495.50">syscall</text></g><g><title>[unknown] (39 samples, 18.75%)</title><rect x="54.3269%" y="469" width="18.7500%" height="15" fill="rgb(254,105,3)" fg:x="113" fg:w="39"/><text x="54.5769%" y="479.50">[unknown]</text></g><g><title>[unknown] (38 samples, 18.27%)</title><rect x="54.8077%" y="453" width="18.2692%" height="15" fill="rgb(221,225,9)" fg:x="114" fg:w="38"/><text x="55.0577%" y="463.50">[unknown]</text></g><g><title>[unknown] (38 samples, 18.27%)</title><rect x="54.8077%" y="437" width="18.2692%" height="15" fill="rgb(224,227,45)" fg:x="114" fg:w="38"/><text x="55.0577%" y="447.50">[unknown]</text></g><g><title>[unknown] (38 samples, 18.27%)</title><rect x="54.8077%" y="421" width="18.2692%" height="15" fill="rgb(229,198,43)" fg:x="114" fg:w="38"/><text x="55.0577%" y="431.50">[unknown]</text></g><g><title>[unknown] (38 samples, 18.27%)</title><rect x="54.8077%" y="405" width="18.2692%" height="15" fill="rgb(206,209,35)" fg:x="114" fg:w="38"/><text x="55.0577%" y="415.50">[unknown]</text></g><g><title>[unknown] (38 samples, 18.27%)</title><rect x="54.8077%" y="389" width="18.2692%" height="15" fill="rgb(245,195,53)" fg:x="114" fg:w="38"/><text x="55.0577%" y="399.50">[unknown]</text></g><g><title>[unknown] (32 samples, 15.38%)</title><rect x="57.6923%" y="373" width="15.3846%" height="15" fill="rgb(240,92,26)" fg:x="120" fg:w="32"/><text x="57.9423%" y="383.50">[unknown]</text></g><g><title>[unknown] (26 samples, 12.50%)</title><rect x="60.5769%" y="357" width="12.5000%" height="15" fill="rgb(207,40,23)" fg:x="126" fg:w="26"/><text x="60.8269%" y="367.50">[unknown]</text></g><g><title>[unknown] (20 samples, 9.62%)</title><rect x="63.4615%" y="341" width="9.6154%" height="15" fill="rgb(223,111,35)" fg:x="132" fg:w="20"/><text x="63.7115%" y="351.50">[unknown]</text></g><g><title>[unknown] (14 samples, 6.73%)</title><rect x="66.3462%" y="325" width="6.7308%" height="15" fill="rgb(229,147,28)" fg:x="138" fg:w="14"/><text x="66.5962%" y="335.50">[unknown]</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="69.7115%" y="309" width="3.3654%" height="15" fill="rgb(211,29,28)" fg:x="145" fg:w="7"/><text x="69.9615%" y="319.50">[un..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="69.7115%" y="293" width="3.3654%" height="15" fill="rgb(228,72,33)" fg:x="145" fg:w="7"/><text x="69.9615%" y="303.50">[un..</text></g><g><title>[unknown] (7 samples, 3.37%)</title><rect x="69.7115%" y="277" width="3.3654%" height="15" fill="rgb(205,214,31)" fg:x="145" fg:w="7"/><text x="69.9615%" y="287.50">[un..</text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="72.5962%" y="261" width="0.4808%" height="15" fill="rgb(224,111,15)" fg:x="151" fg:w="1"/><text x="72.8462%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="72.5962%" y="245" width="0.4808%" height="15" fill="rgb(253,21,26)" fg:x="151" fg:w="1"/><text x="72.8462%" y="255.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.48%)</title><rect x="73.0769%" y="421" width="0.4808%" height="15" fill="rgb(245,139,43)" fg:x="152" fg:w="1"/><text x="73.3269%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="389" width="0.4808%" height="15" fill="rgb(252,170,7)" fg:x="154" fg:w="1"/><text x="74.2885%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="373" width="0.4808%" height="15" fill="rgb(231,118,14)" fg:x="154" fg:w="1"/><text x="74.2885%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="357" width="0.4808%" height="15" fill="rgb(238,83,0)" fg:x="154" fg:w="1"/><text x="74.2885%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="341" width="0.4808%" height="15" fill="rgb(221,39,39)" fg:x="154" fg:w="1"/><text x="74.2885%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="325" width="0.4808%" height="15" fill="rgb(222,119,46)" fg:x="154" fg:w="1"/><text x="74.2885%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="309" width="0.4808%" height="15" fill="rgb(222,165,49)" fg:x="154" fg:w="1"/><text x="74.2885%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="293" width="0.4808%" height="15" fill="rgb(219,113,52)" fg:x="154" fg:w="1"/><text x="74.2885%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="277" width="0.4808%" height="15" fill="rgb(214,7,15)" fg:x="154" fg:w="1"/><text x="74.2885%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="261" width="0.4808%" height="15" fill="rgb(235,32,4)" fg:x="154" fg:w="1"/><text x="74.2885%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="245" width="0.4808%" height="15" fill="rgb(238,90,54)" fg:x="154" fg:w="1"/><text x="74.2885%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="229" width="0.4808%" height="15" fill="rgb(213,208,19)" fg:x="154" fg:w="1"/><text x="74.2885%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="213" width="0.4808%" height="15" fill="rgb(233,156,4)" fg:x="154" fg:w="1"/><text x="74.2885%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="197" width="0.4808%" height="15" fill="rgb(207,194,5)" fg:x="154" fg:w="1"/><text x="74.2885%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="181" width="0.4808%" height="15" fill="rgb(206,111,30)" fg:x="154" fg:w="1"/><text x="74.2885%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="165" width="0.4808%" height="15" fill="rgb(243,70,54)" fg:x="154" fg:w="1"/><text x="74.2885%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="149" width="0.4808%" height="15" fill="rgb(242,28,8)" fg:x="154" fg:w="1"/><text x="74.2885%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="133" width="0.4808%" height="15" fill="rgb(219,106,18)" fg:x="154" fg:w="1"/><text x="74.2885%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="74.0385%" y="117" width="0.4808%" height="15" fill="rgb(244,222,10)" fg:x="154" fg:w="1"/><text x="74.2885%" y="127.50"></text></g><g><title>tokio::runtime::task::raw::shutdown (2 samples, 0.96%)</title><rect x="74.0385%" y="405" width="0.9615%" height="15" fill="rgb(236,179,52)" fg:x="154" fg:w="2"/><text x="74.2885%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;hyper_tls::stream::MaybeHttpsStream&lt;tokio::net::tcp::stream::TcpStream&gt;,hyper::body::body::Body&gt;,hyper::client::client::Client&lt;hyper_tls::client::HttpsConnector&lt;hyper::client::connect::http::HttpConnector&gt;&gt;::connect_to::{{closure}}::{{closure}}::{{closure}}::{{closure}}&gt;,hyper::client::client::Client&lt;hyper_tls::client::HttpsConnector&lt;hyper::client::connect::http::HttpConnector&gt;&gt;::connect_to::{{closure}}::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.48%)</title><rect x="74.5192%" y="389" width="0.4808%" height="15" fill="rgb(213,23,39)" fg:x="155" fg:w="1"/><text x="74.7692%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper_tls::stream::MaybeHttpsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (1 samples, 0.48%)</title><rect x="74.5192%" y="373" width="0.4808%" height="15" fill="rgb(238,48,10)" fg:x="155" fg:w="1"/><text x="74.7692%" y="383.50"></text></g><g><title>SSL_free (1 samples, 0.48%)</title><rect x="74.5192%" y="357" width="0.4808%" height="15" fill="rgb(251,196,23)" fg:x="155" fg:w="1"/><text x="74.7692%" y="367.50"></text></g><g><title>SSL_CTX_free (1 samples, 0.48%)</title><rect x="74.5192%" y="341" width="0.4808%" height="15" fill="rgb(250,152,24)" fg:x="155" fg:w="1"/><text x="74.7692%" y="351.50"></text></g><g><title>X509_STORE_free (1 samples, 0.48%)</title><rect x="74.5192%" y="325" width="0.4808%" height="15" fill="rgb(209,150,17)" fg:x="155" fg:w="1"/><text x="74.7692%" y="335.50"></text></g><g><title>OPENSSL_sk_pop_free (1 samples, 0.48%)</title><rect x="74.5192%" y="309" width="0.4808%" height="15" fill="rgb(234,202,34)" fg:x="155" fg:w="1"/><text x="74.7692%" y="319.50"></text></g><g><title>X509_OBJECT_free (1 samples, 0.48%)</title><rect x="74.5192%" y="293" width="0.4808%" height="15" fill="rgb(253,148,53)" fg:x="155" fg:w="1"/><text x="74.7692%" y="303.50"></text></g><g><title>ASN1_item_free (1 samples, 0.48%)</title><rect x="74.5192%" y="277" width="0.4808%" height="15" fill="rgb(218,129,16)" fg:x="155" fg:w="1"/><text x="74.7692%" y="287.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="74.5192%" y="261" width="0.4808%" height="15" fill="rgb(216,85,19)" fg:x="155" fg:w="1"/><text x="74.7692%" y="271.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="74.5192%" y="245" width="0.4808%" height="15" fill="rgb(235,228,7)" fg:x="155" fg:w="1"/><text x="74.7692%" y="255.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="74.5192%" y="229" width="0.4808%" height="15" fill="rgb(245,175,0)" fg:x="155" fg:w="1"/><text x="74.7692%" y="239.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="74.5192%" y="213" width="0.4808%" height="15" fill="rgb(208,168,36)" fg:x="155" fg:w="1"/><text x="74.7692%" y="223.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.48%)</title><rect x="74.5192%" y="197" width="0.4808%" height="15" fill="rgb(246,171,24)" fg:x="155" fg:w="1"/><text x="74.7692%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="75.0000%" y="325" width="0.4808%" height="15" fill="rgb(215,142,24)" fg:x="156" fg:w="1"/><text x="75.2500%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="75.0000%" y="309" width="0.4808%" height="15" fill="rgb(250,187,7)" fg:x="156" fg:w="1"/><text x="75.2500%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="75.0000%" y="293" width="0.4808%" height="15" fill="rgb(228,66,33)" fg:x="156" fg:w="1"/><text x="75.2500%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="75.0000%" y="277" width="0.4808%" height="15" fill="rgb(234,215,21)" fg:x="156" fg:w="1"/><text x="75.2500%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="75.0000%" y="261" width="0.4808%" height="15" fill="rgb(222,191,20)" fg:x="156" fg:w="1"/><text x="75.2500%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="75.0000%" y="245" width="0.4808%" height="15" fill="rgb(245,79,54)" fg:x="156" fg:w="1"/><text x="75.2500%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="75.0000%" y="229" width="0.4808%" height="15" fill="rgb(240,10,37)" fg:x="156" fg:w="1"/><text x="75.2500%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="75.0000%" y="213" width="0.4808%" height="15" fill="rgb(214,192,32)" fg:x="156" fg:w="1"/><text x="75.2500%" y="223.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (22 samples, 10.58%)</title><rect x="75.0000%" y="373" width="10.5769%" height="15" fill="rgb(209,36,54)" fg:x="156" fg:w="22"/><text x="75.2500%" y="383.50">&lt;tokio::park::e..</text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (22 samples, 10.58%)</title><rect x="75.0000%" y="357" width="10.5769%" height="15" fill="rgb(220,10,11)" fg:x="156" fg:w="22"/><text x="75.2500%" y="367.50">tokio::time::dr..</text></g><g><title>tokio::io::driver::Driver::turn (22 samples, 10.58%)</title><rect x="75.0000%" y="341" width="10.5769%" height="15" fill="rgb(221,106,17)" fg:x="156" fg:w="22"/><text x="75.2500%" y="351.50">tokio::io::driv..</text></g><g><title>mio::poll::Poll::poll (21 samples, 10.10%)</title><rect x="75.4808%" y="325" width="10.0962%" height="15" fill="rgb(251,142,44)" fg:x="157" fg:w="21"/><text x="75.7308%" y="335.50">mio::poll::Poll..</text></g><g><title>epoll_wait (21 samples, 10.10%)</title><rect x="75.4808%" y="309" width="10.0962%" height="15" fill="rgb(238,13,15)" fg:x="157" fg:w="21"/><text x="75.7308%" y="319.50">epoll_wait</text></g><g><title>[unknown] (21 samples, 10.10%)</title><rect x="75.4808%" y="293" width="10.0962%" height="15" fill="rgb(208,107,27)" fg:x="157" fg:w="21"/><text x="75.7308%" y="303.50">[unknown]</text></g><g><title>[unknown] (21 samples, 10.10%)</title><rect x="75.4808%" y="277" width="10.0962%" height="15" fill="rgb(205,136,37)" fg:x="157" fg:w="21"/><text x="75.7308%" y="287.50">[unknown]</text></g><g><title>[unknown] (21 samples, 10.10%)</title><rect x="75.4808%" y="261" width="10.0962%" height="15" fill="rgb(250,205,27)" fg:x="157" fg:w="21"/><text x="75.7308%" y="271.50">[unknown]</text></g><g><title>[unknown] (21 samples, 10.10%)</title><rect x="75.4808%" y="245" width="10.0962%" height="15" fill="rgb(210,80,43)" fg:x="157" fg:w="21"/><text x="75.7308%" y="255.50">[unknown]</text></g><g><title>[unknown] (21 samples, 10.10%)</title><rect x="75.4808%" y="229" width="10.0962%" height="15" fill="rgb(247,160,36)" fg:x="157" fg:w="21"/><text x="75.7308%" y="239.50">[unknown]</text></g><g><title>[unknown] (21 samples, 10.10%)</title><rect x="75.4808%" y="213" width="10.0962%" height="15" fill="rgb(234,13,49)" fg:x="157" fg:w="21"/><text x="75.7308%" y="223.50">[unknown]</text></g><g><title>[unknown] (21 samples, 10.10%)</title><rect x="75.4808%" y="197" width="10.0962%" height="15" fill="rgb(234,122,0)" fg:x="157" fg:w="21"/><text x="75.7308%" y="207.50">[unknown]</text></g><g><title>[unknown] (21 samples, 10.10%)</title><rect x="75.4808%" y="181" width="10.0962%" height="15" fill="rgb(207,146,38)" fg:x="157" fg:w="21"/><text x="75.7308%" y="191.50">[unknown]</text></g><g><title>[unknown] (21 samples, 10.10%)</title><rect x="75.4808%" y="165" width="10.0962%" height="15" fill="rgb(207,177,25)" fg:x="157" fg:w="21"/><text x="75.7308%" y="175.50">[unknown]</text></g><g><title>[unknown] (21 samples, 10.10%)</title><rect x="75.4808%" y="149" width="10.0962%" height="15" fill="rgb(211,178,42)" fg:x="157" fg:w="21"/><text x="75.7308%" y="159.50">[unknown]</text></g><g><title>[unknown] (14 samples, 6.73%)</title><rect x="78.8462%" y="133" width="6.7308%" height="15" fill="rgb(230,69,54)" fg:x="164" fg:w="14"/><text x="79.0962%" y="143.50">[unknown]</text></g><g><title>[unknown] (14 samples, 6.73%)</title><rect x="78.8462%" y="117" width="6.7308%" height="15" fill="rgb(214,135,41)" fg:x="164" fg:w="14"/><text x="79.0962%" y="127.50">[unknown]</text></g><g><title>[unknown] (14 samples, 6.73%)</title><rect x="78.8462%" y="101" width="6.7308%" height="15" fill="rgb(237,67,25)" fg:x="164" fg:w="14"/><text x="79.0962%" y="111.50">[unknown]</text></g><g><title>[unknown] (14 samples, 6.73%)</title><rect x="78.8462%" y="85" width="6.7308%" height="15" fill="rgb(222,189,50)" fg:x="164" fg:w="14"/><text x="79.0962%" y="95.50">[unknown]</text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (49 samples, 23.56%)</title><rect x="75.0000%" y="405" width="23.5577%" height="15" fill="rgb(245,148,34)" fg:x="156" fg:w="49"/><text x="75.2500%" y="415.50">tokio::runtime::thread_pool::worker::..</text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (49 samples, 23.56%)</title><rect x="75.0000%" y="389" width="23.5577%" height="15" fill="rgb(222,29,6)" fg:x="156" fg:w="49"/><text x="75.2500%" y="399.50">&lt;tokio::runtime::park::Parker as toki..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (27 samples, 12.98%)</title><rect x="85.5769%" y="373" width="12.9808%" height="15" fill="rgb(221,189,43)" fg:x="178" fg:w="27"/><text x="85.8269%" y="383.50">parking_lot::condvar..</text></g><g><title>syscall (27 samples, 12.98%)</title><rect x="85.5769%" y="357" width="12.9808%" height="15" fill="rgb(207,36,27)" fg:x="178" fg:w="27"/><text x="85.8269%" y="367.50">syscall</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="85.5769%" y="341" width="12.9808%" height="15" fill="rgb(217,90,24)" fg:x="178" fg:w="27"/><text x="85.8269%" y="351.50">[unknown]</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="85.5769%" y="325" width="12.9808%" height="15" fill="rgb(224,66,35)" fg:x="178" fg:w="27"/><text x="85.8269%" y="335.50">[unknown]</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="85.5769%" y="309" width="12.9808%" height="15" fill="rgb(221,13,50)" fg:x="178" fg:w="27"/><text x="85.8269%" y="319.50">[unknown]</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="85.5769%" y="293" width="12.9808%" height="15" fill="rgb(236,68,49)" fg:x="178" fg:w="27"/><text x="85.8269%" y="303.50">[unknown]</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="85.5769%" y="277" width="12.9808%" height="15" fill="rgb(229,146,28)" fg:x="178" fg:w="27"/><text x="85.8269%" y="287.50">[unknown]</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="85.5769%" y="261" width="12.9808%" height="15" fill="rgb(225,31,38)" fg:x="178" fg:w="27"/><text x="85.8269%" y="271.50">[unknown]</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="85.5769%" y="245" width="12.9808%" height="15" fill="rgb(250,208,3)" fg:x="178" fg:w="27"/><text x="85.8269%" y="255.50">[unknown]</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="85.5769%" y="229" width="12.9808%" height="15" fill="rgb(246,54,23)" fg:x="178" fg:w="27"/><text x="85.8269%" y="239.50">[unknown]</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="85.5769%" y="213" width="12.9808%" height="15" fill="rgb(243,76,11)" fg:x="178" fg:w="27"/><text x="85.8269%" y="223.50">[unknown]</text></g><g><title>[unknown] (27 samples, 12.98%)</title><rect x="85.5769%" y="197" width="12.9808%" height="15" fill="rgb(245,21,50)" fg:x="178" fg:w="27"/><text x="85.8269%" y="207.50">[unknown]</text></g><g><title>[unknown] (20 samples, 9.62%)</title><rect x="88.9423%" y="181" width="9.6154%" height="15" fill="rgb(228,9,43)" fg:x="185" fg:w="20"/><text x="89.1923%" y="191.50">[unknown]</text></g><g><title>[unknown] (20 samples, 9.62%)</title><rect x="88.9423%" y="165" width="9.6154%" height="15" fill="rgb(208,100,47)" fg:x="185" fg:w="20"/><text x="89.1923%" y="175.50">[unknown]</text></g><g><title>[unknown] (13 samples, 6.25%)</title><rect x="92.3077%" y="149" width="6.2500%" height="15" fill="rgb(232,26,8)" fg:x="192" fg:w="13"/><text x="92.5577%" y="159.50">[unknown]</text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="373" width="0.4808%" height="15" fill="rgb(216,166,38)" fg:x="205" fg:w="1"/><text x="98.8077%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="357" width="0.4808%" height="15" fill="rgb(251,202,51)" fg:x="205" fg:w="1"/><text x="98.8077%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="341" width="0.4808%" height="15" fill="rgb(254,216,34)" fg:x="205" fg:w="1"/><text x="98.8077%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="325" width="0.4808%" height="15" fill="rgb(251,32,27)" fg:x="205" fg:w="1"/><text x="98.8077%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="309" width="0.4808%" height="15" fill="rgb(208,127,28)" fg:x="205" fg:w="1"/><text x="98.8077%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="293" width="0.4808%" height="15" fill="rgb(224,137,22)" fg:x="205" fg:w="1"/><text x="98.8077%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="277" width="0.4808%" height="15" fill="rgb(254,70,32)" fg:x="205" fg:w="1"/><text x="98.8077%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="261" width="0.4808%" height="15" fill="rgb(229,75,37)" fg:x="205" fg:w="1"/><text x="98.8077%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="245" width="0.4808%" height="15" fill="rgb(252,64,23)" fg:x="205" fg:w="1"/><text x="98.8077%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="229" width="0.4808%" height="15" fill="rgb(232,162,48)" fg:x="205" fg:w="1"/><text x="98.8077%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="213" width="0.4808%" height="15" fill="rgb(246,160,12)" fg:x="205" fg:w="1"/><text x="98.8077%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="197" width="0.4808%" height="15" fill="rgb(247,166,0)" fg:x="205" fg:w="1"/><text x="98.8077%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="181" width="0.4808%" height="15" fill="rgb(249,219,21)" fg:x="205" fg:w="1"/><text x="98.8077%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="165" width="0.4808%" height="15" fill="rgb(205,209,3)" fg:x="205" fg:w="1"/><text x="98.8077%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="149" width="0.4808%" height="15" fill="rgb(243,44,1)" fg:x="205" fg:w="1"/><text x="98.8077%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.48%)</title><rect x="98.5577%" y="133" width="0.4808%" height="15" fill="rgb(206,159,16)" fg:x="205" fg:w="1"/><text x="98.8077%" y="143.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (55 samples, 26.44%)</title><rect x="73.0769%" y="501" width="26.4423%" height="15" fill="rgb(244,77,30)" fg:x="152" fg:w="55"/><text x="73.3269%" y="511.50">tokio::runtime::task::harness::Harness&lt;T,S..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (55 samples, 26.44%)</title><rect x="73.0769%" y="485" width="26.4423%" height="15" fill="rgb(218,69,12)" fg:x="152" fg:w="55"/><text x="73.3269%" y="495.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (55 samples, 26.44%)</title><rect x="73.0769%" y="469" width="26.4423%" height="15" fill="rgb(212,87,7)" fg:x="152" fg:w="55"/><text x="73.3269%" y="479.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;..</text></g><g><title>tokio::runtime::thread_pool::worker::run (55 samples, 26.44%)</title><rect x="73.0769%" y="453" width="26.4423%" height="15" fill="rgb(245,114,25)" fg:x="152" fg:w="55"/><text x="73.3269%" y="463.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (55 samples, 26.44%)</title><rect x="73.0769%" y="437" width="26.4423%" height="15" fill="rgb(210,61,42)" fg:x="152" fg:w="55"/><text x="73.3269%" y="447.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::s..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (54 samples, 25.96%)</title><rect x="73.5577%" y="421" width="25.9615%" height="15" fill="rgb(211,52,33)" fg:x="153" fg:w="54"/><text x="73.8077%" y="431.50">tokio::runtime::thread_pool::worker::Conte..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2 samples, 0.96%)</title><rect x="98.5577%" y="405" width="0.9615%" height="15" fill="rgb(234,58,33)" fg:x="205" fg:w="2"/><text x="98.8077%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.96%)</title><rect x="98.5577%" y="389" width="0.9615%" height="15" fill="rgb(220,115,36)" fg:x="205" fg:w="2"/><text x="98.8077%" y="399.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.48%)</title><rect x="99.0385%" y="373" width="0.4808%" height="15" fill="rgb(243,153,54)" fg:x="206" fg:w="1"/><text x="99.2885%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.48%)</title><rect x="99.0385%" y="357" width="0.4808%" height="15" fill="rgb(251,47,18)" fg:x="206" fg:w="1"/><text x="99.2885%" y="367.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.48%)</title><rect x="99.0385%" y="341" width="0.4808%" height="15" fill="rgb(242,102,42)" fg:x="206" fg:w="1"/><text x="99.2885%" y="351.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="99.0385%" y="325" width="0.4808%" height="15" fill="rgb(234,31,38)" fg:x="206" fg:w="1"/><text x="99.2885%" y="335.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (1 samples, 0.48%)</title><rect x="99.0385%" y="309" width="0.4808%" height="15" fill="rgb(221,117,51)" fg:x="206" fg:w="1"/><text x="99.2885%" y="319.50"></text></g><g><title>hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (1 samples, 0.48%)</title><rect x="99.0385%" y="293" width="0.4808%" height="15" fill="rgb(212,20,18)" fg:x="206" fg:w="1"/><text x="99.2885%" y="303.50"></text></g><g><title>all (208 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(245,133,36)" fg:x="0" fg:w="208"/><text x="0.2500%" y="655.50"></text></g><g><title>tokio-runtime-w (113 samples, 54.33%)</title><rect x="45.6731%" y="629" width="54.3269%" height="15" fill="rgb(212,6,19)" fg:x="95" fg:w="113"/><text x="45.9231%" y="639.50">tokio-runtime-w</text></g><g><title>__GI___clone (110 samples, 52.88%)</title><rect x="47.1154%" y="613" width="52.8846%" height="15" fill="rgb(218,1,36)" fg:x="98" fg:w="110"/><text x="47.3654%" y="623.50">__GI___clone</text></g><g><title>start_thread (110 samples, 52.88%)</title><rect x="47.1154%" y="597" width="52.8846%" height="15" fill="rgb(246,84,54)" fg:x="98" fg:w="110"/><text x="47.3654%" y="607.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (104 samples, 50.00%)</title><rect x="50.0000%" y="581" width="50.0000%" height="15" fill="rgb(242,110,6)" fg:x="104" fg:w="104"/><text x="50.2500%" y="591.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (104 samples, 50.00%)</title><rect x="50.0000%" y="565" width="50.0000%" height="15" fill="rgb(214,47,5)" fg:x="104" fg:w="104"/><text x="50.2500%" y="575.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (104 samples, 50.00%)</title><rect x="50.0000%" y="549" width="50.0000%" height="15" fill="rgb(218,159,25)" fg:x="104" fg:w="104"/><text x="50.2500%" y="559.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (104 samples, 50.00%)</title><rect x="50.0000%" y="533" width="50.0000%" height="15" fill="rgb(215,211,28)" fg:x="104" fg:w="104"/><text x="50.2500%" y="543.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (102 samples, 49.04%)</title><rect x="50.9615%" y="517" width="49.0385%" height="15" fill="rgb(238,59,32)" fg:x="106" fg:w="102"/><text x="51.2115%" y="527.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.48%)</title><rect x="99.5192%" y="501" width="0.4808%" height="15" fill="rgb(226,82,3)" fg:x="207" fg:w="1"/><text x="99.7692%" y="511.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.48%)</title><rect x="99.5192%" y="485" width="0.4808%" height="15" fill="rgb(240,164,32)" fg:x="207" fg:w="1"/><text x="99.7692%" y="495.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.48%)</title><rect x="99.5192%" y="469" width="0.4808%" height="15" fill="rgb(232,46,7)" fg:x="207" fg:w="1"/><text x="99.7692%" y="479.50"></text></g><g><title>&lt;(&amp;str,u16) as std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (1 samples, 0.48%)</title><rect x="99.5192%" y="453" width="0.4808%" height="15" fill="rgb(229,129,53)" fg:x="207" fg:w="1"/><text x="99.7692%" y="463.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.48%)</title><rect x="99.5192%" y="437" width="0.4808%" height="15" fill="rgb(234,188,29)" fg:x="207" fg:w="1"/><text x="99.7692%" y="447.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (1 samples, 0.48%)</title><rect x="99.5192%" y="421" width="0.4808%" height="15" fill="rgb(246,141,4)" fg:x="207" fg:w="1"/><text x="99.7692%" y="431.50"></text></g><g><title>__GI_getaddrinfo (1 samples, 0.48%)</title><rect x="99.5192%" y="405" width="0.4808%" height="15" fill="rgb(229,23,39)" fg:x="207" fg:w="1"/><text x="99.7692%" y="415.50"></text></g><g><title>gaih_inet (1 samples, 0.48%)</title><rect x="99.5192%" y="389" width="0.4808%" height="15" fill="rgb(206,12,3)" fg:x="207" fg:w="1"/><text x="99.7692%" y="399.50"></text></g><g><title>__GI___nss_database_lookup2 (1 samples, 0.48%)</title><rect x="99.5192%" y="373" width="0.4808%" height="15" fill="rgb(252,226,20)" fg:x="207" fg:w="1"/><text x="99.7692%" y="383.50"></text></g><g><title>nss_parse_file (1 samples, 0.48%)</title><rect x="99.5192%" y="357" width="0.4808%" height="15" fill="rgb(216,123,35)" fg:x="207" fg:w="1"/><text x="99.7692%" y="367.50"></text></g><g><title>_IO_new_fopen (1 samples, 0.48%)</title><rect x="99.5192%" y="341" width="0.4808%" height="15" fill="rgb(212,68,40)" fg:x="207" fg:w="1"/><text x="99.7692%" y="351.50"></text></g><g><title>__fopen_internal (1 samples, 0.48%)</title><rect x="99.5192%" y="325" width="0.4808%" height="15" fill="rgb(254,125,32)" fg:x="207" fg:w="1"/><text x="99.7692%" y="335.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.48%)</title><rect x="99.5192%" y="309" width="0.4808%" height="15" fill="rgb(253,97,22)" fg:x="207" fg:w="1"/><text x="99.7692%" y="319.50"></text></g></svg></svg>